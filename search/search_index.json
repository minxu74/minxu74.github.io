{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About me","text":""},{"location":"#welcome-to-my-space","title":"Welcome to my space","text":"Disclaimer <p>All opinions expressed on this site are my own and do not reflect the views of my employees.</p> <p></p> <p>I am Min Xu, an earth system modeler and staff scientist in the Computational Sciences and Engineering Division at  Oak Ridge National Laboratory. Before that, I was a climate modeler at the Illinois State Water Survey and  worked as a research associate in the Earth System Science Interdisciplinary Center at the University of Maryland, College Park. </p> <p>My full Curriculum Vitae</p>"},{"location":"#hobbies","title":"Hobbies","text":""},{"location":"#research-interest","title":"Research Interest","text":"<p>I am interested in:</p> <ul> <li>numerical modeling </li> <li>land-atmosphere interactions </li> <li>global biogeochemical feedbacks</li> <li>modeling-experiment (ModEx) research</li> <li>model intercomparison, analysis, and benchmarking</li> <li>regional climate</li> <li>crop-climate interactions</li> <li>urban climate </li> <li>PBL and turbulence modeling</li> <li>statistical and wavelet analysis</li> <li>machine learning</li> </ul>"},{"location":"#models","title":"Models","text":"<p>I am familar with the following weather/climate/earth system models:</p> <ul> <li>E3SM: Energy Exascale Earth System Model               </li> <li>CESM: Community Earth System Model               </li> <li>WRF: Weather Research and Forecasting model               </li> <li>ARPS: Advanced Regional Prediction System              </li> <li>RAMS: Regional Atmospheric Modeling System  </li> <li>UM: Unified Model</li> <li>SOCRATES: Suite Of Community RAdiative Transfer codes based on Edwards and Slingo</li> </ul>"},{"location":"#software-and-tools","title":"Software and Tools","text":"<p>I am using the following computational languages and tools in my research:  </p> <p> </p>"},{"location":"#my-stats","title":"My  Stats<sup>1</sup>","text":"<ol> <li> <p>Using GitHub Readme Stats and Top Languages Card apps by  anuraghazra \u21a9</p> </li> </ol>"},{"location":"bio/","title":"Biography","text":"<p>I was born in a small town called Shengze, which is located in southeastern China and is part of Suzhou, Jiangsu Province. My hometown is well-known as the land of silk and the land of fish and rice.</p> <p>My education and employee time line is as follows:</p> <pre><code>%%{init: { 'logLevel': 'debug', 'theme': 'base', 'gitGraph': {'parallelCommits': false, 'showBranches': true, 'showCommitLabel':true, 'mainBranchName': 'Shengze, China'},\n           'themeVariables': {'tagLabelFontSize': '12px',\n                              'tagLabelColor': '#ffffff',\n                              'tagLabelBackground': '#1D8BBF',\n                              'tagLabelBorder': '#084766'}\n} }%%\n   gitGraph TB:\n      commit id: \"1974\" tag: \"Born\"\n      commit id: \"1986\" tag: \"Primary school\"\n      commit id: \"1989\" tag: \"Middel school\"\n      commit id: \"1992\" tag: \"High school\"\n      branch \"Nanjing, China\"\n      commit id: \"1996\" tag: \"Bachelor of Science\"\n      commit id: \"1999\" tag: \"Master of Science\"\n      commit id: \"2002\" tag: \"Doctor of Philosophy\"\n      branch \"Urbana, IL\"\n      commit id: \"200311\" tag: \"Climate Modeler\"\n      commit id: \"201101\"\n      branch \"College Park, MD\"\n      commit id: \"201102\" tag: \"Research Associate\"\n      commit id: \"201412\"\n      branch \"Oak Ridge, TN\"\n      commit id: \"201501\" tag: \"Associate Staff\"\n      commit id: \"2019\" tag: \"Staff Scientist\"\n      commit id: \"2025\"\n      commit id: \"2035\"\n      commit id: \"2045\" tag: \"Retired?\"\n      checkout \"Shengze, China\"\n      commit id: \"2055\"</code></pre> Oak Ridge, TNCollege Park, MDUrbana, ILNanjing, ChinaShengze, China <p></p> <p>Computational Sciences and Engineering Division, Oak Ridge National Laboratory</p> <p></p> <p>Earth System Science Interdisciplinary Center, University of Maryand at College Park</p> <p></p> <p>Illinois State Water Survey, University of Illinois at Urbana and Champaign</p> <p></p> Department of Atmospheric Sciences, Nanjing University <p>Bachelor, major in Atmospheric Physics and Minor Electronic Engineering</p> <p>Master in Atmospheric Physics</p> <p>Ph.D. in Atmospheric Sciences</p> <p>Shengze Renminjie Primary School</p> <p>Shengze Second Middle School</p> <p>Shengze High School</p> <p></p>"},{"location":"blog/2024/05/a-special-day/","title":"A special day","text":"<p>Today is a special day for me. Last year's today is my new birthday. It was hard for me and my family the previous year. I hope everything will go well from now on.  </p>"},{"location":"blog/2024/05/my-first-blog/","title":"My first blog","text":"<p>This is my first blog.  </p>","tags":["firstblog"]},{"location":"jupyternb/check_nbp/","title":"Plot NBP time series","text":"In\u00a0[37]: Copied! <pre>import xarray as xr\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\nwith xr.open_dataset(\"./Downloads/nbp_Lmon_ELM_TEST_r1i1p1_185001-201012.nc\") as da:\n    print (da)\n</pre> import xarray as xr import numpy as np import matplotlib.pyplot as plt   with xr.open_dataset(\"./Downloads/nbp_Lmon_ELM_TEST_r1i1p1_185001-201012.nc\") as da:     print (da) <pre>&lt;xarray.Dataset&gt;\nDimensions:      (hist_interval: 2, lat: 96, lon: 144, time: 1932)\nCoordinates:\n  * lat          (lat) float32 -90.0 -88.11 -86.21 -84.32 ... 86.21 88.11 90.0\n  * lon          (lon) float32 0.0 2.5 5.0 7.5 10.0 ... 350.0 352.5 355.0 357.5\n  * time         (time) object 1850-02-01 00:00:00 ... 2011-01-01 00:00:00\nDimensions without coordinates: hist_interval\nData variables:\n    nbp          (time, lat, lon) float32 ...\n    time_bounds  (time, hist_interval) object ...\nAttributes: (12/25)\n    title:                                     CLM History file information\n    comment:                                   NOTE: None of the variables ar...\n    Conventions:                               CF-1.0\n    history:                                   Thu Feb 11 21:23:12 2021: ncat...\n    source:                                    Community Land Model CLM4.0\n    hostname:                                  cades\n    ...                                        ...\n    ltype_wetland:                             6\n    ltype_urban_tbd:                           7\n    ltype_urban_hd:                            8\n    ltype_urban_md:                            9\n    NCO:                                       4.6.9\n    history_of_appended_files:                 Thu Feb 11 21:23:09 2021: Appe...\n</pre> In\u00a0[33]: Copied! <pre>deltay = 6.371e6 * 180./96  * 3.14/180.\ndeltax = 6.371e6 * 360./144 * 3.14/180. * np.cos(da.lat)\nUntCov = 1.e-12  # kg -&gt; Pg\n\nmonlen = da.time.dt.days_in_month\n\ndanpp = da.nbp * deltax * deltay * UntCov * 86400. * monlen\n</pre> deltay = 6.371e6 * 180./96  * 3.14/180. deltax = 6.371e6 * 360./144 * 3.14/180. * np.cos(da.lat) UntCov = 1.e-12  # kg -&gt; Pg  monlen = da.time.dt.days_in_month  danpp = da.nbp * deltax * deltay * UntCov * 86400. * monlen In\u00a0[34]: Copied! <pre>nppgbl= danpp.groupby('time.year').sum(dim=('time', 'lat', 'lon'))\n</pre> nppgbl= danpp.groupby('time.year').sum(dim=('time', 'lat', 'lon')) In\u00a0[35]: Copied! <pre>fig, ax = plt.subplots()\nnppgbl.plot(ax=ax)\nax.axhline(y=0)\n</pre> fig, ax = plt.subplots() nppgbl.plot(ax=ax) ax.axhline(y=0) Out[35]: <pre>&lt;matplotlib.lines.Line2D at 0x7f47843fbc40&gt;</pre> In\u00a0[36]: Copied! <pre>nppgbl.cumsum().plot()\n</pre> nppgbl.cumsum().plot() Out[36]: <pre>[&lt;matplotlib.lines.Line2D at 0x7f478437d310&gt;]</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"math/","title":"Index","text":"\\[ \\operatorname{ker} f=\\{g\\in G:f(g)=e_{H}\\}{\\mbox{.}} \\] <p>The well known Pythagorean theorem \\(x^2 + y^2 = z^2\\) was proved to be invalid for other exponents. Meaning the next equation has no integer solutions:</p> \\[ x^n + y^n = z^n  \\] \\[ \\frac{\\partial s}{\\partial W} = \\frac{\\partial \\sum_{i=1}^{n} (y_i -(W\\cdot x_i+b))^2}                     {\\partial W} \\\\ = \\sum_{i=1}^{n} 2(y_i -W\\cdot x_i-b)\\cdot(-x_i))  = 2\\cdot \\sum_{i=1}^{n} (-y_i\\cdot x_i + W\\cdot x_i^2 + b\\cdot x_i )      \\stackrel{!}{=} 0    \\nonumber\\\\ \\nonumber\\\\ \\Longleftrightarrow W\\cdot(\\sum_{i=1}^{n} x_i^2) + b\\cdot(\\sum_{i=1}^{n}x_i)   = \\sum_{i=1}^{n}x_i\\cdot y_i \\\\ \\frac{\\partial s}{\\partial b} = \\frac{\\partial \\sum_{i=1}^{n} (y_i -(W\\cdot x_i+b))^2}                     {\\partial b} \\nonumber \\\\ = \\sum_{i=1}^{n} 2(y_i -W\\cdot x_i-b)\\cdot(-1))  = 2\\cdot \\sum_{i=1}^{n} (-y_i\\cdot+ W\\cdot x_i+ b)      \\stackrel{!}{=} 0    \\nonumber \\\\ \\nonumber \\\\ \\Longleftrightarrow W\\cdot(\\sum_{i=1}^{n} x_i) +\\sum_{i=1}^{n}b   = \\sum_{i=1}^{n} y_i \\nonumber \\\\ \\Longleftrightarrow W\\cdot(\\sum_{i=1}^{n}x_i) + n\\cdot b   = \\sum_{i=1}^{n} y_i \\] \\[\\begin{align} \\frac{\\partial s}{\\partial W} &amp;= \\frac{\\partial \\sum_{i=1}^{n} (y_i -(W\\cdot x_i+b))^2}                     {\\partial W} \\nonumber \\\\ &amp;= \\sum_{i=1}^{n} 2(y_i -W\\cdot x_i-b)\\cdot(-x_i))  = 2\\cdot \\sum_{i=1}^{n} (-y_i\\cdot x_i + W\\cdot x_i^2 + b\\cdot x_i )      \\stackrel{!}{=} 0    \\nonumber\\\\ \\nonumber\\\\ &amp;\\Longleftrightarrow W\\cdot(\\sum_{i=1}^{n} x_i^2) + b\\cdot(\\sum_{i=1}^{n}x_i)   = \\sum_{i=1}^{n}x_i\\cdot y_i  \\\\ \\frac{\\partial s}{\\partial b} &amp;= \\frac{\\partial \\sum_{i=1}^{n} (y_i -(W\\cdot x_i+b))^2}                     {\\partial b} \\nonumber \\\\ &amp;= \\sum_{i=1}^{n} 2(y_i -W\\cdot x_i-b)\\cdot(-1))  = 2\\cdot \\sum_{i=1}^{n} (-y_i\\cdot+ W\\cdot x_i+ b)      \\stackrel{!}{=} 0    \\nonumber \\\\ \\nonumber \\\\ &amp;\\Longleftrightarrow W\\cdot(\\sum_{i=1}^{n} x_i) +\\sum_{i=1}^{n}b   = \\sum_{i=1}^{n} y_i \\nonumber \\\\ &amp;\\Longleftrightarrow W\\cdot(\\sum_{i=1}^{n}x_i) + n\\cdot b   = \\sum_{i=1}^{n} y_i  \\end{align}\\]"},{"location":"projects/","title":"Projects","text":""},{"location":"projects/#current-projects","title":"Current projects","text":"<p> RUBISCO: Reducing Uncertainties in Biogeochemical Interactions through Synthesis and Computation  </p> <p></p> <p> ESGF2: Earth System Grid Federation 2   </p> <p></p> <p> Quantifying Feedbacks of Climate Intervention Under Climate Change<sup>1</sup></p> <p> </p>"},{"location":"projects/#previous-projects","title":"Previous projects","text":"<p> E3SM: Energy Exascale Earth System Model project  </p> <ol> <li> <p>The side figure is from the Fig.2.1a in Reflecting Sunlight: Recommendations for Solar Geoengineering Research and Research Governance (2021)\u00a0\u21a9</p> </li> </ol>"},{"location":"projects/gpu/","title":"GPU optimization","text":"<ul> <li>(AGU2019) Accelerating cloud and radiation schemes within the Unified Model for CPU-GPU based high-performance computing systems</li> </ul>"},{"location":"projects/rubisco/","title":"RUBISCO project","text":"<p>I conducted the following work under the RUBISCO project</p> <ul> <li> <p>Model benchmarking and comparison</p> <ul> <li>Evaluations of CMIP5 simulations over cropland</li> <li>ENSO-Induced GPP Extremes Simulated by the CMIP6 Models</li> </ul> </li> <li> <p>Effects of ENSO on global BGC cycles</p> <ul> <li>(AGU2016) Modeling Biogeochemical Responses of Vegetation to ENSO: Comparison and analysis on subgrid PFT patches</li> <li>(AGU2017) Effects of ENSO-induced extremes on terrestrial ecosystems</li> <li>(AGU2018) Oceanic drivers for tropical terrestrial carbon cycle and extreme</li> <li>(AOGS2018) ENSO effects on the terrestrial carbon cycle on Tropics</li> </ul> </li> <li> <p>Extremes</p> <ul> <li>(DMESS2019) Evaluating carbon extremes in a coupled climate-carbon cycle simulation</li> </ul> </li> <li> <p>Phosphorus limitation</p> <ul> <li>(AGU2021) The Role of Terrestrial Phosphorus Limitation in Carbon Cycle-Climate Feedbacks</li> </ul> </li> <li> <p>Climate sensitivity and BGC feedbacks</p> </li> </ul>"},{"location":"publications/","title":"Publications","text":"<p>Zhang, W., Xu, M., Evans, K., Norman, M., Morales-Hernandez, M., Mahajan, S., et al. (2021). Progress towards accelerating the unified model on hybrid multi-core systems. In Proceedings of the Platform for Advanced Scientific Computing Conference (pp. 1\u20139). New York, NY, USA: Association for Computing Machinery. \u00a0\u00a0(1) (2) </p> <ol> <li> <p>@inproceedings{zhangProgressAcceleratingUnified2021,     author = \"Zhang,   Wei and Xu,   Min and Evans,   Katherine and Norman,   Matthew and Morales-Hernandez,   Mario and Mahajan,   Salil and Hill,   Adrian and Manners,   James and Shipway,   Ben and Christopher,   Maynard\",     address = \"New York,   NY,   USA\",     series = \"PASC '21\",     title = \"Progress towards accelerating the unified model on hybrid multi-core systems\",     isbn = \"978-1-4503-8563-3\",     urldate = \"2021-12-28\",     booktitle = \"Proceedings of the Platform for Advanced Scientific Computing Conference\",     publisher = \"Association for Computing Machinery\",     month = \"July\",     year = \"2021\",     pages = \"1--9\" }</p> </li> <li> <p>The cloud microphysics scheme, CASIM, and the radiation scheme, SOCRATES, are two computationally intensive parts within the Met Office's Unified Model (UM). This study enables CASIM and SOCRATES to use accelerated multi-core systems for optimal computational performance of the UM. Using profiling to guide our efforts, we refactored the code for optimal threading and kernel arrangement and implemented OpenACC directives manually or through the CLAW source-to-source translator. Initial porting results achieved 10.02x and 9.25x speedup in CASIM and SOCRATES respectively on 1 GPU compared with 1 CPU core. A granular performance analysis of the strategy and bottlenecks are discussed. These improvements will enable UM to run on heterogeneous computers and a path forward for further improvements is provided.</p> </li> </ol> <p>Tang, R., Mao, J., Jin, M., Chen, A., Yu, Y., Shi, X., et al. (2021). Interannual variability and climatic sensitivity of global wildfire activity. Advances in Climate Change Research. \u00a0\u00a0(1) (2) </p> <ol> <li> <p>@article{tangInterannualVariabilityClimatic2021,     author = \"Tang,   Rongyun and Mao,   Jiafu and Jin,   Mingzhou and Chen,   Anping and Yu,   Yan and Shi,   Xiaoying and Zhang,   Yulong and Hoffman,   Forrest M. and Xu,   Min and Wang,   Yaoping\",     title = \"Interannual variability and climatic sensitivity of global wildfire activity\",     issn = \"1674-9278\",     language = \"en\",     urldate = \"2021-09-24\",     journal = \"Advances in Climate Change Research\",     month = \"July\",     year = \"2021\" }</p> </li> <li> <p>Understanding historical wildfire variations and their environmental driving mechanisms is key to predicting and mitigating wildfires. However, current knowledge of climatic responses and regional contributions to the interannual variability (IAV) of global burned area remains limited. Using recent satellite-derived wildfire products and simulations from version v1.0 of the land component of the U.S. Department of Energy's Energy Exascale Earth System Model (E3SM land model [ELM] v1) driven by three different climate forcings, we investigated the burned area IAV and its climatic sensitivity globally and across nine biomes from 1997 to 2018. We found that 1) the ELM simulations generally agreed with the satellite observations in terms of the burned area IAV magnitudes, regional contributions, and covariations with climate factors, confirming the robustness of the ELM to the usage of different climate forcing sources; 2) tropical savannas, tropical forests, and semi-arid grasslands near deserts were primary contributors to the global burned area IAV, collectively accounting for 71.7\\%\u201399.7\\% of the global wildfire IAV estimated by both the satellite observations and ELM simulations; 3) precipitation was a major fire suppressing factor and dominated the global and regional burned area IAVs, and temperature and shortwave solar radiation were mostly positively related with burned area IAVs; and 4) noticeable local discrepancies between the ELM and remote-sensing results occurred in semi-arid grasslands, croplands, boreal forests, and wetlands, likely caused by uncertainties in the current ELM fire scheme and the imperfectly derived satellite observations. Our findings revealed the spatiotemporal diversity of wildfire variations, regional contributions and climatic responses, and provided new metrics for wildfire modeling, facilitating the wildfire prediction and management.</p> </li> </ol> <p>Sun, L., Liang, X.-Z., Ling, T., Xu, M., &amp; Lee, X. (2020). Improving a Multilevel Turbulence Closure Model for a Shallow Lake in Comparison With Other 1-D Models. Journal of Advances in Modeling Earth Systems, 12(7), e2019MS001971. \u00a0\u00a0(1) (2) </p> <ol> <li> <p>@article{sunImprovingMultilevelTurbulence2020,     author = \"Sun,   Lei and Liang,   Xin-Zhong and Ling,   Tiejun and Xu,   Min and Lee,   Xuhui\",     title = \"Improving a Multilevel Turbulence Closure Model for a Shallow Lake in Comparison With Other 1-D Models\",     volume = \"12\",     copyright = \"\u00a92020. The Authors.\",     issn = \"1942-2466\",     language = \"en\",     number = \"7\",     urldate = \"2020-12-07\",     journal = \"Journal of Advances in Modeling Earth Systems\",     year = \"2020\",     pages = \"e2019MS001971\" }</p> </li> <li> <p>Lakes differ from lands in water availability, heat capacity, albedo, and roughness, which affect local surface-atmospheric interactions. This study modified a multilevel upper ocean model (UOM) for lake applications and evaluated its performance in Lake Taihu (China) with comprehensive measurements against three popular one-dimensional (1-D) lake models. These models were based on different concepts, including the self-similarity (FLake), the wind-driven eddy diffusion (LISSS), the k-\u03b5 turbulence closure (SIMSTRAT), and a simplified turbulence closure (UOM). The surface flux scheme in these models was unified to exclude the discrepancies in representing air-lake exchanges. All models in their default formulations presented obvious cold water temperature biases and largely underestimated the lake surface temperature (LST) diurnal range. For each model, these deficiencies were significantly reduced by incorporating new physics schemes or calibrated tunable parameters based on systematic sensitivity tests. The primary modifications for UOM included (1) a new scheme of decreased surface roughness lengths to better characterize the shallow lake, (2) a solar radiation penetration scheme with increased light extinction coefficient and surface absorption fraction to account for the high water turbidity, and (3) turbulent Prandtl number increased by a factor of 20 to reduce the turbulent vertical mixing. All other models were improved in these three aspects (roughness, extinction, and mixing) within their original formulations. Given these improvements, UOM showed superior performance to other models in capturing LST diurnal cycle and daily to seasonal variations, as well as summer-autumn vertical stratification changes. The new UOM is well suited for application in shallow lakes.</p> </li> </ol> <p>Durden, D. J., Metzger, S., Chu, H., Collier, N., Davis, K. J., Desai, A. R., et al. (2020). Automated Integration of Continental-Scale Observations in Near-Real Time for Simulation and Analysis of Biosphere\u2013Atmosphere Interactions. In J. Nichols, B. Verastegui, A. \u2018Barney\u2019. Maccabe, O. Hernandez, S. Parete-Koon, &amp; T. Ahearn (Eds.), Driving Scientific and Engineering Discoveries Through the Convergence of HPC, Big Data and AI (Vol. 1315, pp. 204\u2013225). Cham: Springer International Publishing. \u00a0\u00a0(1)</p> <ol> <li>@incollection{durdenAutomatedIntegrationContinentalScale2020,     author = \"Durden,   David J. and Metzger,   Stefan and Chu,   Housen and Collier,   Nathan and Davis,   Kenneth J. and Desai,   Ankur R. and Kumar,   Jitendra and Wieder,   William R. and Xu,   Min and Hoffman,   Forrest M.\",     editor = \"Nichols,   Jeffrey and Verastegui,   Becky and Maccabe,   Arthur \u2018Barney\u2019 and Hernandez,   Oscar and Parete-Koon,   Suzanne and Ahearn,   Theresa\",     address = \"Cham\",     title = \"Automated Integration of Continental-Scale Observations in Near-Real Time for Simulation and Analysis of Biosphere\u2013Atmosphere Interactions\",     volume = \"1315\",     isbn = \"978-3-030-63392-9 978-3-030-63393-6\",     language = \"en\",     urldate = \"2021-01-06\",     booktitle = \"Driving Scientific and Engineering Discoveries Through the Convergence of HPC,   Big Data and AI\",     publisher = \"Springer International Publishing\",     year = \"2020\",     pages = \"204--225\" }</li> </ol> <p>Yang, X., Ricciuto, D. M., Thornton, P. E., Shi, X., Xu, M., Hoffman, F., &amp; Norby, R. J. (2019). The Effects of Phosphorus Cycle Dynamics on Carbon Sources and Sinks in the Amazon Region: A Modeling Study Using ELM v1. Journal of Geophysical Research: Biogeosciences, 124(12), 3686\u20133698. \u00a0\u00a0(1)</p> <ol> <li>@article{yangEffectsPhosphorusCycle2019,     author = \"Yang,   Xiaojuan and Ricciuto,   Daniel M. and Thornton,   Peter E. and Shi,   Xiaoying and Xu,   Min and Hoffman,   Forrest and Norby,   Richard J.\",     title = \"The Effects of Phosphorus Cycle Dynamics on Carbon Sources and Sinks in the Amazon Region: A Modeling Study Using ELM v1\",     volume = \"124\",     issn = \"2169-8953,   2169-8961\",     shorttitle = \"The Effects of Phosphorus Cycle Dynamics on Carbon Sources and Sinks in the Amazon Region\",     language = \"en\",     number = \"12\",     urldate = \"2020-02-16\",     journal = \"Journal of Geophysical Research: Biogeosciences\",     month = \"December\",     year = \"2019\",     pages = \"3686--3698\" }</li> </ol> <p>Yan, B., Mao, J., Shi, X., Hoffman, F. M., Notaro, M., Zhou, T., et al. (2019). Predictability of tropical vegetation greenness using sea surface temperatures. Environmental Research Communications, 1(3), 031003. \u00a0\u00a0(1) (2) </p> <ol> <li> <p>@article{yanPredictabilityTropicalVegetation2019,     author = \"Yan,   Binyan and Mao,   Jiafu and Shi,   Xiaoying and Hoffman,   Forrest M. and Notaro,   Michael and Zhou,   Tianjun and Mcdowell,   Nate and Dickinson,   Robert E. and Xu,   Min and Gu,   Lianhong and Ricciuto,   Daniel M.\",     title = \"Predictability of tropical vegetation greenness using sea surface temperatures\",     volume = \"1\",     issn = \"2515-7620\",     language = \"en\",     number = \"3\",     urldate = \"2019-09-06\",     journal = \"Environmental Research Communications\",     month = \"April\",     year = \"2019\",     pages = \"031003\" }</p> </li> <li> <p>Much research has examined the sensitivity of tropical terrestrial ecosystems to various environmental drivers. The predictability of tropical vegetation greenness based on sea surface temperatures (SSTs), however, has not been well explored. This study employed fine spatial resolution remotely-sensed Enhanced Vegetation Index (EVI) and SST indices from tropical ocean basins to investigate the predictability of tropical vegetation greenness in response to SSTs and established empirical models with optimal parameters for hindcast predictions. Three evaluation metrics were used to assess the model performance, i.e., correlations between historical observed and predicted values, percentage of correctly predicted signs of EVI anomalies, and percentage of correct signs for extreme EVI anomalies. Our findings reveal that the pan-tropical EVI was tightly connected to the SSTs over tropical ocean basins. The strongest impacts of SSTs on EVI were identified mainly over the arid or semi-arid tropical regions. The spatially-averaged correlation between historical observed and predicted EVI time series was 0.30 with its maximum value reaching up to 0.84. Vegetated areas across South America (25.76\\%), Africa (33.13\\%), and Southeast Asia (39.94\\%) were diagnosed to be associated with significant SST-EVI correlations (p {\\textless} 0.01). In general, statistical models correctly predicted the sign of EVI anomalies, with their predictability increasing from \u223c60\\% to nearly 100\\% when EVI was abnormal (anomalies exceeding one standard deviation). These results provide a basis for the prediction of changes in greenness of tropical terrestrial ecosystems at seasonal to intra-seasonal scales. Moreover, the statistics-based observational relationships have the potential to facilitate the benchmarking of Earth System Models regarding their ability to capture the responses of tropical vegetation growth to long-term signals of oceanic forcings.</p> </li> </ol> <p>Xu, M., Mahajan, S., Hoffman, F. M., &amp; Shi, X. (2019). Evaluating Carbon Extremes in a Coupled Climate-Carbon Cycle Simulation. In 2019 International Conference on Data Mining Workshops (ICDMW) (pp. 303\u2013310). Beijing, China: IEEE. \u00a0\u00a0(1)</p> <ol> <li>@inproceedings{xuEvaluatingCarbonExtremes2019,     author = \"Xu,   Min and Mahajan,   Salil and Hoffman,   Forrest M. and Shi,   Xiaoying\",     address = \"Beijing,   China\",     title = \"Evaluating Carbon Extremes in a Coupled Climate-Carbon Cycle Simulation\",     isbn = \"978-1-72814-896-0\",     urldate = \"2020-02-16\",     booktitle = \"2019 International Conference on Data Mining Workshops (ICDMW)\",     publisher = \"IEEE\",     month = \"November\",     year = \"2019\",     pages = \"303--310\" }</li> </ol> <p>Mahajan, S., Evans, K. J., Kennedy, J. H., Xu, M., &amp; Norman, M. R. (2019). A Multivariate Approach to Ensure Statistical Reproducibility of Climate Model Simulations. In Proceedings of the Platform for Advanced Scientific Computing Conference (pp. 14:1\u201314:10). New York, NY, USA: ACM. \u00a0\u00a0(1) (2) </p> <ol> <li> <p>@inproceedings{mahajanMultivariateApproachEnsure2019,     author = \"Mahajan,   Salil and Evans,   Katherine J. and Kennedy,   Joseph H. and Xu,   Min and Norman,   Matthew R.\",     address = \"New York,   NY,   USA\",     series = \"PASC '19\",     title = \"A Multivariate Approach to Ensure Statistical Reproducibility of Climate Model Simulations\",     isbn = \"978-1-4503-6770-7\",     urldate = \"2019-09-06\",     booktitle = \"Proceedings of the Platform for Advanced Scientific Computing Conference\",     publisher = \"ACM\",     year = \"2019\",     pages = \"14:1--14:10\" }</p> </li> <li> <p>Effective utilization of novel hybrid architectures of pre-exascale and exascale machines requires transformations to global climate modeling systems that may not reproduce the original model solution bit-for-bit. Round-off level differences grow rapidly in these non-linear and chaotic systems. This makes it difficult to isolate bugs/errors from innocuous growth expected from round-off level differences. Here, we apply two modern multivariate two sample equality of distribution tests to evaluate statistical reproducibility of global climate model simulations using standard monthly output of short ({\\textasciitilde} 1-year) simulation ensembles of a control model and a modified model of US Department of Energy's Energy Exascale Earth System Model (E3SM). Both the tests are able to identify changes induced by modifications to some model tuning parameters. We also conduct formal power analyses of the tests by applying them on designed suites of short simulation ensembles each with an increasingly different climate from the control ensemble. The results are compared against those from another such test. These power analyses provide a framework to quantify the degree of differences that can be detected confidently by the tests for a given ensemble size (sample size). This will allow model developers using the tests to make an informed decision when accepting/rejecting an unintentional non-bit-for-bit change to the model solution.</p> </li> </ol> <p>Mahajan, S., Evans, K. J., Kennedy, J. H., Xu, M., Norman, M. R., &amp; Branstetter, M. L. (2019). Ongoing solution reproducibility of earth system models as they progress toward exascale computing. The International Journal of High Performance Computing Applications, 33(5), 784\u2013790. \u00a0\u00a0(1) (2) </p> <ol> <li> <p>@article{mahajanOngoingSolutionReproducibility2019,     author = \"Mahajan,   Salil and Evans,   Katherine J and Kennedy,   Joseph H and Xu,   Min and Norman,   Mathew R and Branstetter,   Marcia L\",     title = \"Ongoing solution reproducibility of earth system models as they progress toward exascale computing\",     volume = \"33\",     issn = \"1094-3420\",     language = \"en\",     number = \"5\",     urldate = \"2019-09-06\",     journal = \"The International Journal of High Performance Computing Applications\",     month = \"September\",     year = \"2019\",     pages = \"784--790\" }</p> </li> <li> <p>We present a methodology for solution reproducibility for the Energy Exascale Earth System Model during its ongoing software infrastructure development to prepare for exascale computers. The nonlinear chaotic nature of climate system simulations precludes traditional model verification approaches since machine precision differences\u2014resulting from code refactoring, changes in software environment, and so on\u2014grow exponentially to a different weather state. Here, we leverage the nature of climate as a statistical description of the atmosphere in order to establish model reproducibility. We evaluate the degree to which two-sample equality of distribution tests can confidently detect the change in climate from minor tuning parameter changes on model output variables in order to establish the level of difference that indicates a new climate. To apply this (baselined test), we target a section of the model\u2019s development cycle wherein no intentional science changes have been applied to its source code. We compare an ensemble of short simulations that were conducted using a verified model configuration against a new ensemble with the same configuration but with the latest software infrastructure (Common Infrastructure for Modeling the Earth, CIME5.0), compiler versions, and software libraries. We also compare these against ensemble simulations conducted using the original version of the software infrastructure (CIME4.0) of the earlier model configuration, but with the latest compilers and software libraries, to test the impact of new compilers and libraries in isolation from additional software infrastructure. The two-sample equality of distribution tests indicates that these ensembles indeed represent the same climate.</p> </li> </ol> <p>Liang, X.-Z., Sun, C., Zheng, X., Dai, Y., Xu, M., Choi, H. I., et al. (2018). CWRF performance at downscaling China climate characteristics. Climate Dynamics, 1\u201326. \u00a0\u00a0(1) (2) </p> <ol> <li> <p>@article{liangCWRFPerformanceDownscaling2018,     author = \"Liang,   Xin-Zhong and Sun,   Chao and Zheng,   Xiaohui and Dai,   Yongjiu and Xu,   Min and Choi,   Hyun I. and Ling,   Tiejun and Qiao,   Fengxue and Kong,   Xianghui and Bi,   Xunqiang and Song,   Lianchun and Wang,   Fang\",     title = \"CWRF performance at downscaling China climate characteristics\",     issn = \"0930-7575,   1432-0894\",     language = \"en\",     urldate = \"2018-06-09\",     journal = \"Climate Dynamics\",     month = \"May\",     year = \"2018\",     pages = \"1--26\" }</p> </li> <li> <p>The performance of the regional Climate-Weather Research and Forecasting model (CWRF) for downscaling China climate characteristics is evaluated using a 1980\u20132015 simulation at 30 km grid spacing driven by the ECMWF Interim reanalysis (ERI). It is shown that CWRF outperforms the popular Regional Climate Modeling system (RegCM4.6) in key features including monsoon rain bands, diurnal temperature ranges, surface winds, interannual precipitation and temperature anomalies, humidity couplings, and 95th percentile daily precipitation. Even compared with ERI, which assimilates surface observations, CWRF better represents the geographic distributions of seasonal mean climate and extreme precipitation. These results indicate that CWRF may significantly enhance China climate modeling capabilities.</p> </li> </ol> <p>Levine, P. A., Randerson, J. T., Chen, Y., Pritchard, M. S., Xu, M., &amp; Hoffman, F. M. (2018). Soil Moisture Variability Intensifies and Prolongs Eastern Amazon Temperature and Carbon Cycle Response to El Ni\u00f1o\u2013Southern Oscillation. Journal of Climate, 32(4), 1273\u20131292. \u00a0\u00a0(1) (2) </p> <ol> <li> <p>@article{levineSoilMoistureVariability2018,     author = \"Levine,   Paul A. and Randerson,   James T. and Chen,   Yang and Pritchard,   Michael S. and Xu,   Min and Hoffman,   Forrest M.\",     title = \"Soil Moisture Variability Intensifies and Prolongs Eastern Amazon Temperature and Carbon Cycle Response to El Ni\u00f1o\u2013Southern Oscillation\",     volume = \"32\",     issn = \"0894-8755\",     number = \"4\",     urldate = \"2019-01-31\",     journal = \"Journal of Climate\",     month = \"December\",     year = \"2018\",     pages = \"1273--1292\" }</p> </li> <li> <p>El Ni\u00f1o\u2013Southern Oscillation (ENSO) is an important driver of climate and carbon cycle variability in the Amazon. Sea surface temperature (SST) anomalies in the equatorial Pacific drive teleconnections with temperature directly through changes in atmospheric circulation. These circulation changes also impact precipitation and, consequently, soil moisture, enabling additional indirect effects on temperature through land\u2013atmosphere coupling. To separate the direct influence of ENSO SST anomalies from the indirect effects of soil moisture, a mechanism-denial experiment was performed to decouple their variability in the Energy Exascale Earth System Model (E3SM) forced with observed SSTs from 1982 to 2016. Soil moisture variability was found to amplify and extend the effects of SST forcing on eastern Amazon temperature and carbon fluxes in E3SM. During the wet season, the direct, circulation-driven effect of ENSO SST anomalies dominated temperature and carbon cycle variability throughout the Amazon. During the following dry season, after ENSO SST anomalies had dissipated, soil moisture variability became the dominant driver in the east, explaining 67\\%\u201382\\% of the temperature difference between El Ni\u00f1o and La Ni\u00f1a years, and 85\\%\u201391\\% of the difference in carbon fluxes. These results highlight the need to consider the interdependence between temperature and hydrology when attributing the relative contributions of these factors to interannual variability in the terrestrial carbon cycle. Specifically, when offline models are forced with observations or reanalysis, the contribution of temperature may be overestimated when its own variability is modulated by hydrology via land\u2013atmosphere coupling.</p> </li> </ol> <p>Xu, M., &amp; Hoffman, F. (2015). Evaluations of CMIP5 simulations over cropland. In (Vol. 9610, pp. 961003-961003-15). \u00a0\u00a0(1) (2) </p> <ol> <li> <p>@inproceedings{xuEvaluationsCMIP5Simulations2015,     author = \"Xu,   Min and Hoffman,   Forrest\",     title = \"Evaluations of CMIP5 simulations over cropland\",     volume = \"9610\",     urldate = \"2015-09-08\",     year = \"2015\",     pages = \"961003--961003--15\" }</p> </li> <li> <p>Cropland is the major source of carbon lost to the atmosphere and contribute directly to emissions of greenhouse gases. There is, however, large potential for cropland to reduce its carbon ux to the atmosphere and sequester soil carbon through soil and crop managements. The managements include no-tillage, perennial and/or deep root crops, irrigation, and organic fertilization etc. But these estimations over cropland remain largest uncertain among all other terrestrial biomes. In most models in CMIP5, the cropland is generally treated similarly as grassland without accounting for realistic crop phenology and physiology processes and crop and soil manage- ments. In this study, we will evaluate how well cropland is represented in CMIP5 simulations and how to improve the representations and reduce the uncertainties over cropland. We will compare the modeled biogeochemical variables against multiple observational data including various remote sensing products and in-situ data.</p> </li> </ol> <p>Ling, T., Xu, M., Liang, X.-Z., Wang, J. X. L., &amp; Noh, Y. (2015). A multilevel ocean mixed layer model resolving the diurnal cycle: Development and validation. Journal of Advances in Modeling Earth Systems, n/a\u2013n/a. \u00a0\u00a0(1) (2) </p> <ol> <li> <p>@article{lingMultilevelOceanMixed2015,     author = \"Ling,   Tiejun and Xu,   Min and Liang,   Xin-Zhong and Wang,   Julian X.L. and Noh,   Yign\",     title = \"A multilevel ocean mixed layer model resolving the diurnal cycle: Development and validation\",     issn = \"1942-2466\",     shorttitle = \"A multilevel ocean mixed layer model resolving the diurnal cycle\",     language = \"en\",     urldate = \"2015-09-01\",     journal = \"Journal of Advances in Modeling Earth Systems\",     month = \"August\",     year = \"2015\",     pages = \"n/a--n/a\" }</p> </li> <li> <p>The representation of transient air-sea interactions is critical to the prediction of the sea surface temperature diurnal cycle and daily variability. This study develops a multi-level upper ocean model to more realistically resolve these interactions. The model is based on the one-dimensional turbulence kinetic energy closure developed by Noh et al. [2011], and incorporates new numerical techniques and improved schemes for model physics. The primary improvements include: (1) a surface momentum flux penetration scheme to better depict velocity shear in the diurnal mixed layer; (2) a solar penetration scheme to improve the penetration of visible and near-infrared bands of solar radiation into the mixed layer ocean; (3) a scheme to resolve the cool-skin and warm-layer effects on sea skin temperature; (4) a vertical grid stretch scheme to achieve higher near-surface resolution with fewer vertical levels; (5) a trapezoidal time integration scheme for flexible time steps; (6) a relaxation term of the previous daily mean difference between observed and modeled the sea surface temperature. According to the numerical experiments based on the TOGA-COARE IMET mooring buoy data and the validation by observations from the National Data Buoy Center, NOAA, the results indicate that the new upper ocean mixed layer model improves the simulation of the diurnal cycle of SST and sea skin temperature, especially in amplitude. This article is protected by copyright. All rights reserved.</p> </li> </ol> <p>Sreepathi, S., Xu, M., Collier, N., Kumar, J., Mao, J., &amp; Hoffman, F. M. (n.d.). Land Model Testbed: Accelerating Development, Benchmarking and Analysis of Land Surface Models. \u00a0\u00a0(1) (2) </p> <ol> <li> <p>@article{sreepathiLandModelTestbed,     author = \"Sreepathi,   Sarat and Xu,   Min and Collier,   Nathan and Kumar,   Jitendra and Mao,   Jiafu and Hoffman,   Forrest M\",     title = \"Land Model Testbed: Accelerating Development,   Benchmarking and Analysis of Land Surface Models\",     language = \"en\" }</p> </li> <li> <p>A Land Model Testbed (LMT), designed to provide a computational framework for systematically assessing model \ufb01delity and supporting rapid development of complex multiscale models, offers a general-purpose work\ufb02ow for conducting large ensemble simulations of multiple land surface models, postprocessing large volumes of model output, and evaluating model results. It leverages existing tools for launching model simulations and the International Land Model Benchmarking (ILAMB) package for assessing model \ufb01delity through comparison with best-available observational datasets. Increased complexity and proliferation of uncertain parameters in process representations in land surface models has driven the need for frequent and intensive testing and evaluating of models to quantify uncertainties and optimize parameters such that results are consistent with observations. The LMT described here meets these needs by providing tools to run thousands of ensemble simulations simultaneously and post-process their output \ufb01les, by automating execution of an enhanced version of ILAMB with site-speci\ufb01c benchmarks and multivariate functional relationships, and by offering ensemble diagnostics and a customizable dashboard for displaying model performance metrics and associated graphics. We envision the LMT capabilities will serve as a foundational computational resource for a proposed user facility focused on terrestrial multiscale model\u2013data integration.</p> </li> </ol>"},{"location":"publications/poster/","title":"Posters","text":"<p>Under Construction </p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"publications/present/","title":"Presentations","text":""},{"location":"publications/present/#previous-presentations","title":"Previous presentations","text":"<ul> <li>A case study on optimizing the UM cloud and radiation submodels for GPU acceleration  </li> </ul> <ul> <li>The role of terrestrial phosphorus limitation in carbon cycle-climate feedbacks  </li> </ul> <ul> <li>Oceanic drivers for tropical terrestrial carbon cycle and extreme </li> </ul>"},{"location":"slides/Readme/","title":"Place to hold the slides","text":"<p>Generally they were generated from Obsidian with the advanced slides/slides extended plugins.</p>"},{"location":"slides/Readme/#minml","title":"Minml","text":"<p>Demo from MSzturc</p> <p>Its md file can be found at the link</p>"},{"location":"slides/ELM_Experimental_Simulations/dist/css/theme/","title":"Index","text":""},{"location":"slides/ELM_Experimental_Simulations/dist/css/theme/#dependencies","title":"Dependencies","text":"<p>Themes are written using Sass to keep things modular and reduce the need for repeated selectors across files. Make sure that you have the reveal.js development environment installed before proceeding: https://revealjs.com/installation/#full-setup</p>"},{"location":"slides/ELM_Experimental_Simulations/dist/css/theme/#creating-a-theme","title":"Creating a Theme","text":"<p>To create your own theme, start by duplicating a <code>.scss</code> file in /css/theme/source. It will be automatically compiled from Sass to CSS (see the gulpfile) when you run <code>npm run build -- css-themes</code>.</p> <p>Each theme file does four things in the following order:</p> <ol> <li> <p>Include /css/theme/template/mixins.scss Shared utility functions.</p> </li> <li> <p>Include /css/theme/template/settings.scss Declares a set of custom variables that the template file (step 4) expects. Can be overridden in step 3.</p> </li> <li> <p>Override This is where you override the default theme. Either by specifying variables (see settings.scss for reference) or by adding any selectors and styles you please.</p> </li> <li> <p>Include /css/theme/template/theme.scss The template theme file which will generate final CSS output based on the currently defined variables.</p> </li> </ol>"},{"location":"slides/ELM_Experimental_Simulations/plugin/chalkboard/","title":"Chalkboard","text":"<p>With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:</p> <ul> <li>you can make notes directly on the slides, e.g. to comment on certain aspects,</li> <li>you can open a chalkboard or whiteboard on which you can make notes.</li> </ul> <p>The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.</p> <p>The plugin records all drawings made so that they can be play backed using the <code>autoSlide</code> feature or the <code>audio-slideshow</code> plugin.</p> <p>Check out the demo</p>"},{"location":"slides/ELM_Experimental_Simulations/plugin/chalkboard/#setup","title":"Setup","text":"<p>To use the plugin include <pre><code>&lt;!-- Font awesome is required for the chalkboard plugin --&gt;\n&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/js/all.min.js\"&gt;&lt;/script&gt;\n&lt;link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\"&gt;\n&lt;!-- Custom controls plugin is used to for opening and closing annotation modes. --&gt;\n&lt;script src=\"https://cdn.jsdelivr.net/npm/reveal.js-plugins@latest/customcontrols/plugin.js\"&gt;&lt;/script&gt;\n&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/reveal.js-plugins@latest/customcontrols/style.css\"&gt;\n&lt;!-- Chalkboard plugin --&gt;\n&lt;script src=\"https://cdn.jsdelivr.net/npm/reveal.js-plugins@latest/chalkboard/plugin.js\"&gt;&lt;/script&gt;\n&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/reveal.js-plugins@latest/chalkboard/style.css\"&gt;\n</code></pre> to the header of your presentation and configure reveal.js and the plugin by</p> <pre><code>Reveal.initialize({\n  customcontrols: {\n    controls: [\n      { icon: '&lt;i class=\"fa fa-pen-square\"&gt;&lt;/i&gt;',\n        title: 'Toggle chalkboard (B)',\n        action: 'RevealChalkboard.toggleChalkboard();'\n      },\n      { icon: '&lt;i class=\"fa fa-pen\"&gt;&lt;/i&gt;',\n        title: 'Toggle notes canvas (C)',\n        action: 'RevealChalkboard.toggleNotesCanvas();'\n      }\n    ]\n  },\n  chalkboard: {\n    // add configuration here\n  },\n  // ...\n  plugins: [ RevealChalkboard, RevealCustomControls ],\n  // ...\n});\n</code></pre> <p>In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that <code>font-awesome</code> is available. The easiest way is to include <pre><code>&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/reveal.js-plugins/menu/font-awesome/css/fontawesome.css\"&gt;\n</code></pre> to the <code>head</code> section of you HTML-file.</p>"},{"location":"slides/ELM_Experimental_Simulations/plugin/chalkboard/#usage","title":"Usage","text":""},{"location":"slides/ELM_Experimental_Simulations/plugin/chalkboard/#mouse-or-touch","title":"Mouse or touch","text":"<ul> <li>Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard</li> <li>Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)</li> <li>Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)</li> <li>Click the left mouse button and drag to write on notes canvas or chalkboard</li> <li>Click the right mouse button and drag to wipe away previous drawings</li> <li>Touch and move to write on notes canvas or chalkboard</li> </ul>"},{"location":"slides/ELM_Experimental_Simulations/plugin/chalkboard/#keyboard","title":"Keyboard","text":"<ul> <li>Press the 'BACKSPACE' key to delete all chalkboard drawings</li> <li>Press the 'DEL' key to clear the notes canvas or chalkboard</li> <li>Press the 'c' key to toggle the notes canvas</li> <li>Press the 'b' key to toggle the chalkboard</li> <li>Press the 'd' key to download drawings</li> <li>Press the 'x' key to cycle colors forward</li> <li>Press the 'y' key to cycle colors backward</li> </ul>"},{"location":"slides/ELM_Experimental_Simulations/plugin/chalkboard/#playback","title":"Playback","text":"<p>If the <code>autoSlide</code> feature is set or if the <code>audio-slideshow</code> plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.</p>"},{"location":"slides/ELM_Experimental_Simulations/plugin/chalkboard/#multiplexing","title":"Multiplexing","text":"<p>The plugin supports multiplexing via the <code>multiplex</code> plugin or the <code>seminar</code> plugin.</p>"},{"location":"slides/ELM_Experimental_Simulations/plugin/chalkboard/#pdf-export","title":"PDF-Export","text":"<p>If the slideshow is opened in print mode, the chalkboard drawings in the session storage (see <code>storage</code> option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see <code>src</code> option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.</p>"},{"location":"slides/ELM_Experimental_Simulations/plugin/chalkboard/#configuration","title":"Configuration","text":"<p>The plugin has several configuration options:</p> <ul> <li><code>boardmarkerWidth</code>: an integer, the drawing width of the boardmarker; larger values draw thicker lines.</li> <li><code>chalkWidth</code>: an integer, the drawing width of the chalk; larger values draw thicker lines.</li> <li><code>chalkEffect</code>: a float in the range <code>[0.0, 1.0]</code>, the intesity of the chalk effect on the chalk board. Full effect (default) <code>1.0</code>, no effect <code>0.0</code>.</li> <li><code>storage</code>: Optional variable name for session storage of drawings.</li> <li><code>src</code>: Optional filename for pre-recorded drawings.</li> <li><code>readOnly</code>: Configuation option allowing to prevent changes to existing drawings. If set to <code>true</code> no changes can be made, if set to false <code>false</code> changes can be made, if unset or set to <code>undefined</code> no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the 'DEL' key (i.e. by using the <code>RevealChalkboard.clear()</code> function).</li> <li><code>transition</code>: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.</li> <li><code>theme</code>: Can be set to either <code>\"chalkboard\"</code> or <code>\"whiteboard\"</code>.</li> </ul> <p>The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.</p> <ul> <li><code>background</code>: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.</li> <li><code>grid</code>: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. <code>{ color: 'rgb(127,127,255,0.1)', distance: 40, width: 2}</code>. Alternatively, the grid can be removed by setting the value to <code>false</code>.</li> <li><code>eraser</code>: An image path and radius for the eraser.</li> <li><code>boardmarkers</code>: A list of boardmarkers with given color and cursor.</li> <li><code>chalks</code>: A list of chalks with given color and cursor.</li> <li><code>rememberColor</code>: Whether to remember the last selected color for the slide canvas or the board.</li> </ul> <p>All of the configurations are optional and the default values shown below are used if the options are not provided.</p> <pre><code>Reveal.initialize({\n    // ...\n    chalkboard: {\n        boardmarkerWidth: 3,\n        chalkWidth: 7,\n        chalkEffect: 1.0,\n        storage: null,\n        src: null,\n        readOnly: undefined,\n        transition: 800,\n        theme: \"chalkboard\",\n        background: [ 'rgba(127,127,127,.1)' , path + 'img/blackboard.png' ],\n        grid: { color: 'rgb(50,50,10,0.5)', distance: 80, width: 2},\n        eraser: { src: path + 'img/sponge.png', radius: 20},\n        boardmarkers : [\n                { color: 'rgba(100,100,100,1)', cursor: 'url(' + path + 'img/boardmarker-black.png), auto'},\n                { color: 'rgba(30,144,255, 1)', cursor: 'url(' + path + 'img/boardmarker-blue.png), auto'},\n                { color: 'rgba(220,20,60,1)', cursor: 'url(' + path + 'img/boardmarker-red.png), auto'},\n                { color: 'rgba(50,205,50,1)', cursor: 'url(' + path + 'img/boardmarker-green.png), auto'},\n                { color: 'rgba(255,140,0,1)', cursor: 'url(' + path + 'img/boardmarker-orange.png), auto'},\n                { color: 'rgba(150,0,20150,1)', cursor: 'url(' + path + 'img/boardmarker-purple.png), auto'},\n                { color: 'rgba(255,220,0,1)', cursor: 'url(' + path + 'img/boardmarker-yellow.png), auto'}\n        ],\n        chalks: [\n                { color: 'rgba(255,255,255,0.5)', cursor: 'url(' + path + 'img/chalk-white.png), auto'},\n                { color: 'rgba(96, 154, 244, 0.5)', cursor: 'url(' + path + 'img/chalk-blue.png), auto'},\n                { color: 'rgba(237, 20, 28, 0.5)', cursor: 'url(' + path + 'img/chalk-red.png), auto'},\n                { color: 'rgba(20, 237, 28, 0.5)', cursor: 'url(' + path + 'img/chalk-green.png), auto'},\n                { color: 'rgba(220, 133, 41, 0.5)', cursor: 'url(' + path + 'img/chalk-orange.png), auto'},\n                { color: 'rgba(220,0,220,0.5)', cursor: 'url(' + path + 'img/chalk-purple.png), auto'},\n                { color: 'rgba(255,220,0,0.5)', cursor: 'url(' + path + 'img/chalk-yellow.png), auto'}\n        ]\n    },\n    // ...\n\n});\n</code></pre>"},{"location":"slides/ELM_Experimental_Simulations/plugin/chalkboard/#credits","title":"Credits","text":"<p>The chalkboard effect is based on Chalkboard by Mohamed Moustafa.</p>"},{"location":"slides/ELM_Experimental_Simulations/plugin/chalkboard/#license","title":"License","text":"<p>MIT licensed</p> <p>Copyright (C) 2023 Asvin Goel</p>"},{"location":"slides/ELM_Experimental_Simulations/plugin/chart/","title":"Chart","text":"<p>A plugin for Reveal.js allowing to easily add charts using Chart.js.</p> <p>Check out the demo</p>"},{"location":"slides/ELM_Experimental_Simulations/plugin/chart/#setup","title":"Setup","text":"<p>To use the plugin include <pre><code>&lt;!-- Chart plugin --&gt;\n&lt;script src=\"https://cdn.jsdelivr.net/npm/reveal.js-plugins@latest/chart/plugin.js\"&gt;&lt;/script&gt;\n&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.2.0/chart.min.js\"&gt;&lt;/script&gt;\n</code></pre> to the header of your presentation and configure reveal.js and the plugin by</p> <pre><code>Reveal.initialize({\n  chart: {\n    // add configuration here\n  },\n  // ...\n  plugins: [ RevealChart ],\n  // ...\n});\n</code></pre>"},{"location":"slides/ELM_Experimental_Simulations/plugin/chart/#configuration","title":"Configuration","text":"<p>The plugin has several parameters that you can set for your presentation by providing an <code>chart</code> option in the reveal.js initialization options. Note that all configuration parameters are optional and the defaults of Chart.js will be used for parameters that are not specified.</p> <p><pre><code>Reveal.initialize({\n    // ...\n    chart: {\n        defaults: {\n            color: 'lightgray', // color of labels\n            scale: {\n                beginAtZero: true,\n                ticks: { stepSize: 1 },\n                grid: { color: \"lightgray\" } , // color of grid lines\n            },\n        },\n        line: { borderColor: [ \"rgba(20,220,220,.8)\" , \"rgba(220,120,120,.8)\", \"rgba(20,120,220,.8)\" ], \"borderDash\": [ [5,10], [0,0] ] },\n        bar: { backgroundColor: [ \"rgba(20,220,220,.8)\" , \"rgba(220,120,120,.8)\", \"rgba(20,120,220,.8)\" ]},\n        pie: { backgroundColor: [ [\"rgba(0,0,0,.8)\" , \"rgba(220,20,20,.8)\", \"rgba(20,220,20,.8)\", \"rgba(220,220,20,.8)\", \"rgba(20,20,220,.8)\"] ]},\n    },\n        // ...\n});\n</code></pre> The <code>defaults</code> parameter  will overwrite <code>Chart.defaults</code>. Furthermore, for any chart type, e.g. line, bar, etc., the parameters for the individual datasets can be specified. Where Chart.js allows to specify a single parameter for a particular dataset, the plugin allows to specify an array of values for this parameter, which will automatically be assigned to the different datasets. Note that if there are more datasets than elements in the array, the plugin will start again with the first value in the array.</p>"},{"location":"slides/ELM_Experimental_Simulations/plugin/chart/#usage","title":"Usage","text":"<p>A chart can be included in a slide by adding a <code>canvas</code> element with the <code>data-chart</code> attribute set to the desired chart type.</p> <p>The chart can be configured within the canvas body by a JSON string embedded into an HTML comment.</p> <p><pre><code>&lt;canvas data-chart=\"line\" &gt;\n&lt;!--\n{\n \"data\": {\n  \"labels\": [\"January\",\" February\",\" March\",\" April\",\" May\",\" June\",\" July\"],\n  \"datasets\":[\n   {\n    \"data\":[65,59,80,81,56,55,40],\n    \"label\":\"My first dataset\",\"backgroundColor\":\"rgba(20,220,220,.8)\"\n   },\n   {\n    \"data\":[28,48,40,19,86,27,90],\n    \"label\":\"My second dataset\",\"backgroundColor\":\"rgba(220,120,120,.8)\"\n   }\n  ]\n }\n}\n--&gt;\n&lt;/canvas&gt;\n</code></pre> It is possible to provide the chart data by comma separated values and use the JSON string within the HTML comment to configure the chart layout.</p> <pre><code>&lt;canvas class=\"stretch\" data-chart=\"line\"&gt;\nMy first dataset, 65, 59, 80, 81, 56, 55, 40\n&lt;!-- This is a comment that will be ignored --&gt;\nMy second dataset, 28, 48, 40, 19, 86, 27, 90\n&lt;!--\n{\n \"data\" : {\n  \"labels\" : [\"Enero\", \"Febrero\", \"Marzo\", \"Avril\", \"Mayo\", \"Junio\", \"Julio\"],\n  \"datasets\" : [{ \"borderColor\": \"#0f0\", \"borderDash\": [\"5\",\"10\"] }, { \"borderColor\": \"#0ff\" } ]\n }\n}\n--&gt;\n&lt;/canvas&gt;\n</code></pre> <p>The layout configuration provided in <code>chart</code> parameter (see Configuration) will be used by default and only those parameters that are specified in a JSON string are used to overwrite the default values. If no JSON string is provided to configure the chart layout the default configuration is used. Note, that if no labels for the data points are provided by a JSON string, the plugin expects that the first row provides table headers.</p> <pre><code>&lt;canvas data-chart=\"line\"&gt;\nMonth, January, February, March, April, May, June, July\nMy first dataset, 65, 59, 80, 81, 56, 55, 40\nMy second dataset, 28, 48, 40, 19, 86, 27, 90\n&lt;/canvas&gt;\n</code></pre> <p>The chart data can also be provided in an external CSV file. To include external data, the filename must be specified using the <code>data-chart-src</code> attribute of the <code>canvas</code> element. The CSV file is expected to only contain data values, whereas options for drawing the chart can be given as described above.</p> <pre><code>&lt;canvas data-chart=\"bar\" data-chart-src=\"chart/data.csv\"&gt;\n&lt;!--\n{\n\"data\" : {\n\"datasets\" : [{ \"backgroundColor\": \"#0f0\" }, { \"backgroundColor\": \"#0ff\" } ]\n},\n\"options\": { \"scales\": { \"x\": { \"stacked\": true }, \"y\": { \"stacked\": true } } }\n}\n--&gt;\n&lt;/canvas&gt;\n</code></pre>"},{"location":"slides/ELM_Experimental_Simulations/plugin/chart/#license","title":"License","text":"<p>MIT licensed</p> <p>Copyright (C) 2023 Asvin Goel</p>"},{"location":"slides/ELM_Experimental_Simulations/plugin/customcontrols/","title":"Custom controls","text":"<p>This plugin allows to add responsive custom controls to reveal.js which allow arbitrary positioning, layout, and behaviour of the controls.</p> <p>Check out the demo</p>"},{"location":"slides/ELM_Experimental_Simulations/plugin/customcontrols/#setup","title":"Setup","text":"<p>To use the plugin include <pre><code>&lt;!-- Font awesome is used by several plugins --&gt;\n&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/js/all.min.js\"&gt;&lt;/script&gt;\n&lt;link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\"&gt;\n&lt;!-- Custom controls plugin --&gt;\n&lt;script src=\"https://cdn.jsdelivr.net/npm/reveal.js-plugins@latest/customcontrols/plugin.js\"&gt;&lt;/script&gt;\n&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/reveal.js-plugins@latest/customcontrols/style.css\"&gt;\n</code></pre> to the header of your presentation and configure reveal.js and the plugin by</p> <pre><code>Reveal.initialize({\n  customcontrols: {\n    // add configuration here\n  },\n  // ...\n  plugins: [ RevealCustomControls ],\n  // ...\n});\n</code></pre>"},{"location":"slides/ELM_Experimental_Simulations/plugin/customcontrols/#configuration","title":"Configuration","text":"<p>The plugin can be configured by adding custom controls and changing the layout of the slide number, e.g., by:</p> <pre><code>Reveal.initialize({\n    // ...\n  customcontrols: {\n    controls: [\n      {\n        id: 'toggle-overview',\n        title: 'Toggle overview (O)',\n        icon: '&lt;i class=\"fa fa-th\"&gt;&lt;/i&gt;',\n        action: 'Reveal.toggleOverview();'\n      }\n    ]\n  },\n  // ...\n\n});\n</code></pre> <p>The <code>id</code> and <code>title</code> are optional. The configuration should be self explaining and any number of controls can be added. The style file can be altered to control the layout and responsiveness of the custom controls.</p>"},{"location":"slides/ELM_Experimental_Simulations/plugin/customcontrols/#license","title":"License","text":"<p>MIT licensed</p> <p>Copyright (C) 2023 Asvin Goel</p>"},{"location":"slides/ELM_Experimental_Simulations/plugin/menu/","title":"reveal.js-menu","text":"<p>A slideout menu plugin for Reveal.js to quickly jump to any slide by title. Also optionally change the theme and set the default transition. Check out the live demo</p>"},{"location":"slides/ELM_Experimental_Simulations/plugin/menu/#installation","title":"Installation","text":""},{"location":"slides/ELM_Experimental_Simulations/plugin/menu/#bower","title":"Bower","text":"<p>Download and install the package in your project:</p> <p><code>bower install reveal.js-menu</code></p> <p>Add the plugin to your presentation, as below.</p> <pre><code>&lt;script src=\"bower_components/reveal.js-menu/menu.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  Reveal.initialize({\n    plugins: [ RevealMenu ]\n  });\n&lt;/script&gt;\n</code></pre>"},{"location":"slides/ELM_Experimental_Simulations/plugin/menu/#npm","title":"npm","text":"<p>Download and install the package in your project:</p> <p><code>npm install --save reveal.js-menu</code></p> <p>Add the plugin to your presentation, as below.</p> <pre><code>&lt;script src=\"node_modules/reveal.js-menu/menu.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  Reveal.initialize({\n    plugins: [ RevealMenu ]\n  });\n&lt;/script&gt;\n</code></pre>"},{"location":"slides/ELM_Experimental_Simulations/plugin/menu/#manual","title":"Manual","text":"<p>Copy this repository into the plugins folder of your reveal.js presentation, ie <code>plugins/menu</code>.</p> <p>Add the plugin to the dependencies in your presentation, as below.</p> <pre><code>&lt;script src=\"plugin/menu/menu.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  Reveal.initialize({\n    plugins: [ RevealMenu ]\n  });\n&lt;/script&gt;\n</code></pre>"},{"location":"slides/ELM_Experimental_Simulations/plugin/menu/#configuration","title":"Configuration","text":"<p>You can configure the menu for your presentation by providing a <code>menu</code> option in the reveal.js initialization options. Note that all config values are optional and will default as specified below.</p> <pre><code>Reveal.initialize({\n  // ...\n\n  menu: {\n    // Specifies which side of the presentation the menu will\n    // be shown. Use 'left' or 'right'.\n    side: 'left',\n\n    // Specifies the width of the menu.\n    // Can be one of the following:\n    // 'normal', 'wide', 'third', 'half', 'full', or\n    // any valid css length value\n    width: 'normal',\n\n    // Add slide numbers to the titles in the slide list.\n    // Use 'true' or format string (same as reveal.js slide numbers)\n    numbers: false,\n\n    // Specifies which slide elements will be used for generating\n    // the slide titles in the menu. The default selects the first\n    // heading element found in the slide, but you can specify any\n    // valid css selector and the text from the first matching\n    // element will be used.\n    // Note: that a section data-menu-title attribute or an element\n    // with a menu-title class will take precedence over this option\n    titleSelector: 'h1, h2, h3, h4, h5, h6',\n\n    // If slides do not have a matching title, attempt to use the\n    // start of the text content as the title instead\n    useTextContentForMissingTitles: false,\n\n    // Hide slides from the menu that do not have a title.\n    // Set to 'true' to only list slides with titles.\n    hideMissingTitles: false,\n\n    // Adds markers to the slide titles to indicate the\n    // progress through the presentation. Set to 'false'\n    // to hide the markers.\n    markers: true,\n\n    // Specify custom panels to be included in the menu, by\n    // providing an array of objects with 'title', 'icon'\n    // properties, and either a 'src' or 'content' property.\n    custom: false,\n\n    // Specifies the themes that will be available in the themes\n    // menu panel. Set to 'true' to show the themes menu panel\n    // with the default themes list. Alternatively, provide an\n    // array to specify the themes to make available in the\n    // themes menu panel, for example...\n    //\n    // [\n    //     { name: 'Black', theme: 'dist/theme/black.css' },\n    //     { name: 'White', theme: 'dist/theme/white.css' },\n    //     { name: 'League', theme: 'dist/theme/league.css' },\n    //     {\n    //       name: 'Dark',\n    //       theme: 'lib/reveal.js/dist/theme/black.css',\n    //       highlightTheme: 'lib/reveal.js/plugin/highlight/monokai.css'\n    //     },\n    //     {\n    //       name: 'Code: Zenburn',\n    //       highlightTheme: 'lib/reveal.js/plugin/highlight/zenburn.css'\n    //     }\n    // ]\n    //\n    // Note: specifying highlightTheme without a theme will\n    // change the code highlight theme while leaving the\n    // presentation theme unchanged.\n    themes: false,\n\n    // Specifies the path to the default theme files. If your\n    // presentation uses a different path to the standard reveal\n    // layout then you need to provide this option, but only\n    // when 'themes' is set to 'true'. If you provide your own\n    // list of themes or 'themes' is set to 'false' the\n    // 'themesPath' option is ignored.\n    themesPath: 'dist/theme/',\n\n    // Specifies if the transitions menu panel will be shown.\n    // Set to 'true' to show the transitions menu panel with\n    // the default transitions list. Alternatively, provide an\n    // array to specify the transitions to make available in\n    // the transitions panel, for example...\n    // ['None', 'Fade', 'Slide']\n    transitions: false,\n\n    // Adds a menu button to the slides to open the menu panel.\n    // Set to 'false' to hide the button.\n    openButton: true,\n\n    // If 'true' allows the slide number in the presentation to\n    // open the menu panel. The reveal.js slideNumber option must\n    // be displayed for this to take effect\n    openSlideNumber: false,\n\n    // If true allows the user to open and navigate the menu using\n    // the keyboard. Standard keyboard interaction with reveal\n    // will be disabled while the menu is open.\n    keyboard: true,\n\n    // Normally the menu will close on user actions such as\n    // selecting a menu item, or clicking the presentation area.\n    // If 'true', the sticky option will leave the menu open\n    // until it is explicitly closed, that is, using the close\n    // button or pressing the ESC or m key (when the keyboard\n    // interaction option is enabled).\n    sticky: false,\n\n    // If 'true' standard menu items will be automatically opened\n    // when navigating using the keyboard. Note: this only takes\n    // effect when both the 'keyboard' and 'sticky' options are enabled.\n    autoOpen: true,\n\n    // If 'true' the menu will not be created until it is explicitly\n    // requested by calling RevealMenu.init(). Note this will delay\n    // the creation of all menu panels, including custom panels, and\n    // the menu button.\n    delayInit: false,\n\n    // If 'true' the menu will be shown when the menu is initialised.\n    openOnInit: false,\n\n    // By default the menu will load it's own font-awesome library\n    // icons. If your presentation needs to load a different\n    // font-awesome library the 'loadIcons' option can be set to false\n    // and the menu will not attempt to load the font-awesome library.\n    loadIcons: true\n  }\n});\n</code></pre>"},{"location":"slides/ELM_Experimental_Simulations/plugin/menu/#themes-stylesheet","title":"Themes Stylesheet","text":"<p>If you are using the themes panel you need to ensure the theme stylesheet in the presentation uses the <code>id=\"theme\"</code> attribute. For example...</p> <pre><code>&lt;link rel=\"stylesheet\" href=\"css/theme/black.css\" id=\"theme\" /&gt;\n</code></pre> <p>If your themes configuration includes code highlight themes you need to ensure the highlights theme stylesheet in the presentation uses the <code>id=\"highlight-theme\"</code> attribute. For example...</p> <pre><code>&lt;link\n  rel=\"stylesheet\"\n  href=\"plugin/highlight/zenburn.css\"\n  id=\"highlight-theme\"\n/&gt;\n</code></pre>"},{"location":"slides/ELM_Experimental_Simulations/plugin/menu/#slide-titles","title":"Slide Titles","text":"<p>The slide titles used in the menu can be supplied explicitly or are taken directly from the presentation, using the following rules...</p>"},{"location":"slides/ELM_Experimental_Simulations/plugin/menu/#1-the-sections-data-menu-title-attribute","title":"1. The section's <code>data-menu-title</code> attribute.","text":"<p>If the slide's section element contains a <code>data-menu-title</code> attribute this will be used for the slide title in the menu. For example...</p> <pre><code>&lt;section data-menu-title=\"Custom Menu Title\"&gt;\n  &lt;h1&gt;Title&lt;/h1&gt;\n  &lt;p&gt;...&lt;/p&gt;\n&lt;/section&gt;\n</code></pre>"},{"location":"slides/ELM_Experimental_Simulations/plugin/menu/#2-any-element-with-the-class-menu-title","title":"2. Any element with the class <code>menu-title</code>.","text":"<p>If the slide's section contains an element with the class <code>menu-title</code> then the element's text will be used for the title. The first such element found will be used if there are more than one. Note the element need not be displayed to be used. For example...</p> <pre><code>&lt;section&gt;\n  &lt;h1&gt;Title&lt;/h1&gt;\n  &lt;span class=\"menu-title\" style=\"display: none\"&gt;Custom Menu Title&lt;/span&gt;\n  &lt;p&gt;...&lt;/p&gt;\n&lt;/section&gt;\n</code></pre>"},{"location":"slides/ELM_Experimental_Simulations/plugin/menu/#3-the-first-heading-found-or-a-custom-element-selector","title":"3. The first heading found or a custom element selector","text":"<p>The <code>titleSelector</code> option can be used to customise the elements that will be used to generate the slide titles in the menu. The default option selects the first heading element found in the slide. For example...</p> <pre><code>&lt;section&gt;\n  &lt;h3&gt;This will be the slide title in the menu&lt;/h3&gt;\n  &lt;h1&gt;Title&lt;/h1&gt;\n  &lt;p&gt;...&lt;/p&gt;\n&lt;/section&gt;\n</code></pre> <p>Any valid CSS selector should work but note the selector will only be applied to elements contained within the slide section. You could use the <code>'h1'</code> selector to only use level 1 headings or <code>'p'</code> to use the first paragraph element. For example, <code>titleSelector: 'p.lead'</code> would be used like this...</p> <pre><code>&lt;section&gt;\n  &lt;h1&gt;Title&lt;/h1&gt;\n  &lt;p class=\"lead\"&gt;This will be the slide title in the menu&lt;/p&gt;\n  &lt;p&gt;...&lt;/p&gt;\n&lt;/section&gt;\n</code></pre> <p>Using <code>titleSelector: ''</code> will ignore all elements and no title will be provided, unless the slide section contains a <code>data-menu-title</code> attribute or an element with the <code>menu-title</code> class.</p>"},{"location":"slides/ELM_Experimental_Simulations/plugin/menu/#4-no-title-is-provided","title":"4. No title is provided","text":"<p>If no title can be found using the above methods, a default title incorporating the slide number will be used. For example, the following would result in a slide title in the format of 'Slide 12'...</p> <pre><code>&lt;section&gt;\n  &lt;p&gt;...&lt;/p&gt;\n&lt;/section&gt;\n</code></pre> <p>If the <code>hideMissingTitles</code> option is set to <code>true</code>, however, the slide will not be listed in the menu.</p>"},{"location":"slides/ELM_Experimental_Simulations/plugin/menu/#custom-menu-panels","title":"Custom Menu Panels","text":"<p>Additional custom panels can be added the menu using the <code>custom</code> option.</p> <pre><code>Reveal.initialize({\n  // ...\n\n  menu: {\n    // ...\n\n    custom: [\n      {\n        title: 'Links',\n        icon: '&lt;i class=\"fa fa-external-link\"&gt;',\n        src: 'links.html'\n      },\n      {\n        title: 'About',\n        icon: '&lt;i class=\"fa fa-info\"&gt;',\n        content: '&lt;p&gt;This slidedeck is created with reveal.js&lt;/p&gt;'\n      }\n    ]\n  }\n});\n</code></pre> <p><code>title</code> and <code>icon</code> are used for the toolbar buttons at the top of the menu. There are two approaches you can use to provide content for the panels...</p> <ul> <li>You can provide a URL in <code>src</code> to load html from another file.</li> <li>Alternatively, you can provide html in <code>content</code> and this will be added to the custom panel.</li> </ul>"},{"location":"slides/ELM_Experimental_Simulations/plugin/menu/#custom-slide-menu-items","title":"Custom slide menu items","text":"<p>You can provide menu items in your custom panels using the following format. This allows you to define your own navigation links for your presentation.</p> <pre><code>&lt;h1&gt;Links&lt;/h1&gt;\n&lt;ul class=\"slide-menu-items\"&gt;\n  &lt;li class=\"slide-menu-item\"&gt;&lt;a href=\"#/transitions\"&gt;Transitions&lt;/a&gt;&lt;/li&gt;\n  &lt;li class=\"slide-menu-item\"&gt;&lt;a href=\"#/13\"&gt;Code highlighting&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <p>You are not limited to linking to presentation slides. You can provide any link you wish.</p> <pre><code>&lt;h1&gt;External Links&lt;/h1&gt;\n&lt;ul class=\"slide-menu-items\"&gt;\n  &lt;li class=\"slide-menu-item\"&gt;\n    &lt;a href=\"https://github.com/denehyg/reveal.js-menu\"&gt;Reveal.js-menu&lt;/a&gt;\n  &lt;/li&gt;\n  &lt;li class=\"slide-menu-item\"&gt;\n    &lt;a href=\"https://github.com/hakimel/reveal.js\"&gt;Reveal.js&lt;/a&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <p>Using menu items enables keyboard navigation of your links as with the other panels. However, you don't have to use menu items for your links. You can simply provide standard links and unordered lists in your html. Notice you can provide your custom menu items mixed with other html if you wish.</p>"},{"location":"slides/ELM_Experimental_Simulations/plugin/menu/#ready-event","title":"Ready Event","text":"<p>A 'menu-ready' event is fired when reveal.js-menu has loaded all non-async dependencies and is ready to start navigating.</p> <pre><code>Reveal.addEventListener('menu-ready', function (event) {\n  // your code\n});\n</code></pre>"},{"location":"slides/ELM_Experimental_Simulations/plugin/menu/#api","title":"API","text":"<p>The <code>RevealMenu</code> object exposes a JavaScript API for controlling the menu:</p> Function Description toggle(event) Toggles the open state of the menu, ie open if it is closed, and close if it is open openMenu(event) Opens the menu closeMenu(event, force) Closes the menu. To force the menu to close (ie when <code>sticky</code> option is <code>true</code>) call <code>closeMenu(null, true)</code> openPanel(event, ref) Opens the menu to a specific panel, passing the name of the panel or the panel element itself isOpen() Returns true if the menu is open initialiseMenu() Initialises the menu if it has not already been initialised. Used in conjunction with the <code>delayInit</code> option isMenuInitialised() Returns true if the menu has been initialised"},{"location":"slides/ELM_Experimental_Simulations/plugin/menu/#compatibility","title":"Compatibility","text":"<p>reveal.js-menu v2.0 is built for reveal.js v4. It will not work with reveal.js v3. If you require a menu for reveal.js v3 you will need to install reveal.js-menu v1.2.0.</p> <p>v2.0 also introduces API changes that are not backwards compatible. <code>init()</code> has been renamed to <code>initMenu()</code> to deconflict with the reveal.js v4 plugin API. <code>isInit()</code> has also been changed to <code>isMenuInitialised()</code>.</p>"},{"location":"slides/ELM_Experimental_Simulations/plugin/menu/#license","title":"License","text":"<p>MIT licensed</p> <p>Copyright (C) 2020 Greg Denehy</p>"},{"location":"slides/ELM_Experimental_Simulations/plugin/menu/CONTRIBUTING/","title":"CONTRIBUTING","text":""},{"location":"slides/ELM_Experimental_Simulations/plugin/menu/CONTRIBUTING/#contributing","title":"Contributing","text":""},{"location":"slides/ELM_Experimental_Simulations/plugin/menu/CONTRIBUTING/#bug-reports","title":"Bug Reports","text":"<p>When reporting a bug make sure to include information about which browser and operating system you are on as well as the necessary steps to reproduce the issue. If possible please include a link to a sample presentation where the bug can be tested.</p>"},{"location":"slides/ELM_Experimental_Simulations/plugin/menu/CONTRIBUTING/#pull-requests","title":"Pull Requests","text":"<ul> <li>Should follow the coding style of the file you work in</li> <li>Should be made towards the dev branch</li> <li>Should be submitted from a feature/topic branch (not your master)</li> </ul>"},{"location":"slides/ILAMB_for_ExpAI/dist/css/theme/","title":"Index","text":""},{"location":"slides/ILAMB_for_ExpAI/dist/css/theme/#dependencies","title":"Dependencies","text":"<p>Themes are written using Sass to keep things modular and reduce the need for repeated selectors across files. Make sure that you have the reveal.js development environment installed before proceeding: https://revealjs.com/installation/#full-setup</p>"},{"location":"slides/ILAMB_for_ExpAI/dist/css/theme/#creating-a-theme","title":"Creating a Theme","text":"<p>To create your own theme, start by duplicating a <code>.scss</code> file in /css/theme/source. It will be automatically compiled from Sass to CSS (see the gulpfile) when you run <code>npm run build -- css-themes</code>.</p> <p>Each theme file does four things in the following order:</p> <ol> <li> <p>Include /css/theme/template/mixins.scss Shared utility functions.</p> </li> <li> <p>Include /css/theme/template/settings.scss Declares a set of custom variables that the template file (step 4) expects. Can be overridden in step 3.</p> </li> <li> <p>Override This is where you override the default theme. Either by specifying variables (see settings.scss for reference) or by adding any selectors and styles you please.</p> </li> <li> <p>Include /css/theme/template/theme.scss The template theme file which will generate final CSS output based on the currently defined variables.</p> </li> </ol>"},{"location":"slides/ILAMB_for_ExpAI/plugin/chalkboard/","title":"Chalkboard","text":"<p>With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:</p> <ul> <li>you can make notes directly on the slides, e.g. to comment on certain aspects,</li> <li>you can open a chalkboard or whiteboard on which you can make notes.</li> </ul> <p>The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.</p> <p>The plugin records all drawings made so that they can be play backed using the <code>autoSlide</code> feature or the <code>audio-slideshow</code> plugin.</p> <p>Check out the demo</p>"},{"location":"slides/ILAMB_for_ExpAI/plugin/chalkboard/#setup","title":"Setup","text":"<p>To use the plugin include <pre><code>&lt;!-- Font awesome is required for the chalkboard plugin --&gt;\n&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/js/all.min.js\"&gt;&lt;/script&gt;\n&lt;link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\"&gt;\n&lt;!-- Custom controls plugin is used to for opening and closing annotation modes. --&gt;\n&lt;script src=\"https://cdn.jsdelivr.net/npm/reveal.js-plugins@latest/customcontrols/plugin.js\"&gt;&lt;/script&gt;\n&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/reveal.js-plugins@latest/customcontrols/style.css\"&gt;\n&lt;!-- Chalkboard plugin --&gt;\n&lt;script src=\"https://cdn.jsdelivr.net/npm/reveal.js-plugins@latest/chalkboard/plugin.js\"&gt;&lt;/script&gt;\n&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/reveal.js-plugins@latest/chalkboard/style.css\"&gt;\n</code></pre> to the header of your presentation and configure reveal.js and the plugin by</p> <pre><code>Reveal.initialize({\n  customcontrols: {\n    controls: [\n      { icon: '&lt;i class=\"fa fa-pen-square\"&gt;&lt;/i&gt;',\n        title: 'Toggle chalkboard (B)',\n        action: 'RevealChalkboard.toggleChalkboard();'\n      },\n      { icon: '&lt;i class=\"fa fa-pen\"&gt;&lt;/i&gt;',\n        title: 'Toggle notes canvas (C)',\n        action: 'RevealChalkboard.toggleNotesCanvas();'\n      }\n    ]\n  },\n  chalkboard: {\n    // add configuration here\n  },\n  // ...\n  plugins: [ RevealChalkboard, RevealCustomControls ],\n  // ...\n});\n</code></pre> <p>In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that <code>font-awesome</code> is available. The easiest way is to include <pre><code>&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/reveal.js-plugins/menu/font-awesome/css/fontawesome.css\"&gt;\n</code></pre> to the <code>head</code> section of you HTML-file.</p>"},{"location":"slides/ILAMB_for_ExpAI/plugin/chalkboard/#usage","title":"Usage","text":""},{"location":"slides/ILAMB_for_ExpAI/plugin/chalkboard/#mouse-or-touch","title":"Mouse or touch","text":"<ul> <li>Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard</li> <li>Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)</li> <li>Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)</li> <li>Click the left mouse button and drag to write on notes canvas or chalkboard</li> <li>Click the right mouse button and drag to wipe away previous drawings</li> <li>Touch and move to write on notes canvas or chalkboard</li> </ul>"},{"location":"slides/ILAMB_for_ExpAI/plugin/chalkboard/#keyboard","title":"Keyboard","text":"<ul> <li>Press the 'BACKSPACE' key to delete all chalkboard drawings</li> <li>Press the 'DEL' key to clear the notes canvas or chalkboard</li> <li>Press the 'c' key to toggle the notes canvas</li> <li>Press the 'b' key to toggle the chalkboard</li> <li>Press the 'd' key to download drawings</li> <li>Press the 'x' key to cycle colors forward</li> <li>Press the 'y' key to cycle colors backward</li> </ul>"},{"location":"slides/ILAMB_for_ExpAI/plugin/chalkboard/#playback","title":"Playback","text":"<p>If the <code>autoSlide</code> feature is set or if the <code>audio-slideshow</code> plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.</p>"},{"location":"slides/ILAMB_for_ExpAI/plugin/chalkboard/#multiplexing","title":"Multiplexing","text":"<p>The plugin supports multiplexing via the <code>multiplex</code> plugin or the <code>seminar</code> plugin.</p>"},{"location":"slides/ILAMB_for_ExpAI/plugin/chalkboard/#pdf-export","title":"PDF-Export","text":"<p>If the slideshow is opened in print mode, the chalkboard drawings in the session storage (see <code>storage</code> option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see <code>src</code> option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.</p>"},{"location":"slides/ILAMB_for_ExpAI/plugin/chalkboard/#configuration","title":"Configuration","text":"<p>The plugin has several configuration options:</p> <ul> <li><code>boardmarkerWidth</code>: an integer, the drawing width of the boardmarker; larger values draw thicker lines.</li> <li><code>chalkWidth</code>: an integer, the drawing width of the chalk; larger values draw thicker lines.</li> <li><code>chalkEffect</code>: a float in the range <code>[0.0, 1.0]</code>, the intesity of the chalk effect on the chalk board. Full effect (default) <code>1.0</code>, no effect <code>0.0</code>.</li> <li><code>storage</code>: Optional variable name for session storage of drawings.</li> <li><code>src</code>: Optional filename for pre-recorded drawings.</li> <li><code>readOnly</code>: Configuation option allowing to prevent changes to existing drawings. If set to <code>true</code> no changes can be made, if set to false <code>false</code> changes can be made, if unset or set to <code>undefined</code> no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the 'DEL' key (i.e. by using the <code>RevealChalkboard.clear()</code> function).</li> <li><code>transition</code>: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.</li> <li><code>theme</code>: Can be set to either <code>\"chalkboard\"</code> or <code>\"whiteboard\"</code>.</li> </ul> <p>The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.</p> <ul> <li><code>background</code>: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.</li> <li><code>grid</code>: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. <code>{ color: 'rgb(127,127,255,0.1)', distance: 40, width: 2}</code>. Alternatively, the grid can be removed by setting the value to <code>false</code>.</li> <li><code>eraser</code>: An image path and radius for the eraser.</li> <li><code>boardmarkers</code>: A list of boardmarkers with given color and cursor.</li> <li><code>chalks</code>: A list of chalks with given color and cursor.</li> <li><code>rememberColor</code>: Whether to remember the last selected color for the slide canvas or the board.</li> </ul> <p>All of the configurations are optional and the default values shown below are used if the options are not provided.</p> <pre><code>Reveal.initialize({\n    // ...\n    chalkboard: {\n        boardmarkerWidth: 3,\n        chalkWidth: 7,\n        chalkEffect: 1.0,\n        storage: null,\n        src: null,\n        readOnly: undefined,\n        transition: 800,\n        theme: \"chalkboard\",\n        background: [ 'rgba(127,127,127,.1)' , path + 'img/blackboard.png' ],\n        grid: { color: 'rgb(50,50,10,0.5)', distance: 80, width: 2},\n        eraser: { src: path + 'img/sponge.png', radius: 20},\n        boardmarkers : [\n                { color: 'rgba(100,100,100,1)', cursor: 'url(' + path + 'img/boardmarker-black.png), auto'},\n                { color: 'rgba(30,144,255, 1)', cursor: 'url(' + path + 'img/boardmarker-blue.png), auto'},\n                { color: 'rgba(220,20,60,1)', cursor: 'url(' + path + 'img/boardmarker-red.png), auto'},\n                { color: 'rgba(50,205,50,1)', cursor: 'url(' + path + 'img/boardmarker-green.png), auto'},\n                { color: 'rgba(255,140,0,1)', cursor: 'url(' + path + 'img/boardmarker-orange.png), auto'},\n                { color: 'rgba(150,0,20150,1)', cursor: 'url(' + path + 'img/boardmarker-purple.png), auto'},\n                { color: 'rgba(255,220,0,1)', cursor: 'url(' + path + 'img/boardmarker-yellow.png), auto'}\n        ],\n        chalks: [\n                { color: 'rgba(255,255,255,0.5)', cursor: 'url(' + path + 'img/chalk-white.png), auto'},\n                { color: 'rgba(96, 154, 244, 0.5)', cursor: 'url(' + path + 'img/chalk-blue.png), auto'},\n                { color: 'rgba(237, 20, 28, 0.5)', cursor: 'url(' + path + 'img/chalk-red.png), auto'},\n                { color: 'rgba(20, 237, 28, 0.5)', cursor: 'url(' + path + 'img/chalk-green.png), auto'},\n                { color: 'rgba(220, 133, 41, 0.5)', cursor: 'url(' + path + 'img/chalk-orange.png), auto'},\n                { color: 'rgba(220,0,220,0.5)', cursor: 'url(' + path + 'img/chalk-purple.png), auto'},\n                { color: 'rgba(255,220,0,0.5)', cursor: 'url(' + path + 'img/chalk-yellow.png), auto'}\n        ]\n    },\n    // ...\n\n});\n</code></pre>"},{"location":"slides/ILAMB_for_ExpAI/plugin/chalkboard/#credits","title":"Credits","text":"<p>The chalkboard effect is based on Chalkboard by Mohamed Moustafa.</p>"},{"location":"slides/ILAMB_for_ExpAI/plugin/chalkboard/#license","title":"License","text":"<p>MIT licensed</p> <p>Copyright (C) 2023 Asvin Goel</p>"},{"location":"slides/ILAMB_for_ExpAI/plugin/chart/","title":"Chart","text":"<p>A plugin for Reveal.js allowing to easily add charts using Chart.js.</p> <p>Check out the demo</p>"},{"location":"slides/ILAMB_for_ExpAI/plugin/chart/#setup","title":"Setup","text":"<p>To use the plugin include <pre><code>&lt;!-- Chart plugin --&gt;\n&lt;script src=\"https://cdn.jsdelivr.net/npm/reveal.js-plugins@latest/chart/plugin.js\"&gt;&lt;/script&gt;\n&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.2.0/chart.min.js\"&gt;&lt;/script&gt;\n</code></pre> to the header of your presentation and configure reveal.js and the plugin by</p> <pre><code>Reveal.initialize({\n  chart: {\n    // add configuration here\n  },\n  // ...\n  plugins: [ RevealChart ],\n  // ...\n});\n</code></pre>"},{"location":"slides/ILAMB_for_ExpAI/plugin/chart/#configuration","title":"Configuration","text":"<p>The plugin has several parameters that you can set for your presentation by providing an <code>chart</code> option in the reveal.js initialization options. Note that all configuration parameters are optional and the defaults of Chart.js will be used for parameters that are not specified.</p> <p><pre><code>Reveal.initialize({\n    // ...\n    chart: {\n        defaults: {\n            color: 'lightgray', // color of labels\n            scale: {\n                beginAtZero: true,\n                ticks: { stepSize: 1 },\n                grid: { color: \"lightgray\" } , // color of grid lines\n            },\n        },\n        line: { borderColor: [ \"rgba(20,220,220,.8)\" , \"rgba(220,120,120,.8)\", \"rgba(20,120,220,.8)\" ], \"borderDash\": [ [5,10], [0,0] ] },\n        bar: { backgroundColor: [ \"rgba(20,220,220,.8)\" , \"rgba(220,120,120,.8)\", \"rgba(20,120,220,.8)\" ]},\n        pie: { backgroundColor: [ [\"rgba(0,0,0,.8)\" , \"rgba(220,20,20,.8)\", \"rgba(20,220,20,.8)\", \"rgba(220,220,20,.8)\", \"rgba(20,20,220,.8)\"] ]},\n    },\n        // ...\n});\n</code></pre> The <code>defaults</code> parameter  will overwrite <code>Chart.defaults</code>. Furthermore, for any chart type, e.g. line, bar, etc., the parameters for the individual datasets can be specified. Where Chart.js allows to specify a single parameter for a particular dataset, the plugin allows to specify an array of values for this parameter, which will automatically be assigned to the different datasets. Note that if there are more datasets than elements in the array, the plugin will start again with the first value in the array.</p>"},{"location":"slides/ILAMB_for_ExpAI/plugin/chart/#usage","title":"Usage","text":"<p>A chart can be included in a slide by adding a <code>canvas</code> element with the <code>data-chart</code> attribute set to the desired chart type.</p> <p>The chart can be configured within the canvas body by a JSON string embedded into an HTML comment.</p> <p><pre><code>&lt;canvas data-chart=\"line\" &gt;\n&lt;!--\n{\n \"data\": {\n  \"labels\": [\"January\",\" February\",\" March\",\" April\",\" May\",\" June\",\" July\"],\n  \"datasets\":[\n   {\n    \"data\":[65,59,80,81,56,55,40],\n    \"label\":\"My first dataset\",\"backgroundColor\":\"rgba(20,220,220,.8)\"\n   },\n   {\n    \"data\":[28,48,40,19,86,27,90],\n    \"label\":\"My second dataset\",\"backgroundColor\":\"rgba(220,120,120,.8)\"\n   }\n  ]\n }\n}\n--&gt;\n&lt;/canvas&gt;\n</code></pre> It is possible to provide the chart data by comma separated values and use the JSON string within the HTML comment to configure the chart layout.</p> <pre><code>&lt;canvas class=\"stretch\" data-chart=\"line\"&gt;\nMy first dataset, 65, 59, 80, 81, 56, 55, 40\n&lt;!-- This is a comment that will be ignored --&gt;\nMy second dataset, 28, 48, 40, 19, 86, 27, 90\n&lt;!--\n{\n \"data\" : {\n  \"labels\" : [\"Enero\", \"Febrero\", \"Marzo\", \"Avril\", \"Mayo\", \"Junio\", \"Julio\"],\n  \"datasets\" : [{ \"borderColor\": \"#0f0\", \"borderDash\": [\"5\",\"10\"] }, { \"borderColor\": \"#0ff\" } ]\n }\n}\n--&gt;\n&lt;/canvas&gt;\n</code></pre> <p>The layout configuration provided in <code>chart</code> parameter (see Configuration) will be used by default and only those parameters that are specified in a JSON string are used to overwrite the default values. If no JSON string is provided to configure the chart layout the default configuration is used. Note, that if no labels for the data points are provided by a JSON string, the plugin expects that the first row provides table headers.</p> <pre><code>&lt;canvas data-chart=\"line\"&gt;\nMonth, January, February, March, April, May, June, July\nMy first dataset, 65, 59, 80, 81, 56, 55, 40\nMy second dataset, 28, 48, 40, 19, 86, 27, 90\n&lt;/canvas&gt;\n</code></pre> <p>The chart data can also be provided in an external CSV file. To include external data, the filename must be specified using the <code>data-chart-src</code> attribute of the <code>canvas</code> element. The CSV file is expected to only contain data values, whereas options for drawing the chart can be given as described above.</p> <pre><code>&lt;canvas data-chart=\"bar\" data-chart-src=\"chart/data.csv\"&gt;\n&lt;!--\n{\n\"data\" : {\n\"datasets\" : [{ \"backgroundColor\": \"#0f0\" }, { \"backgroundColor\": \"#0ff\" } ]\n},\n\"options\": { \"scales\": { \"x\": { \"stacked\": true }, \"y\": { \"stacked\": true } } }\n}\n--&gt;\n&lt;/canvas&gt;\n</code></pre>"},{"location":"slides/ILAMB_for_ExpAI/plugin/chart/#license","title":"License","text":"<p>MIT licensed</p> <p>Copyright (C) 2023 Asvin Goel</p>"},{"location":"slides/ILAMB_for_ExpAI/plugin/customcontrols/","title":"Custom controls","text":"<p>This plugin allows to add responsive custom controls to reveal.js which allow arbitrary positioning, layout, and behaviour of the controls.</p> <p>Check out the demo</p>"},{"location":"slides/ILAMB_for_ExpAI/plugin/customcontrols/#setup","title":"Setup","text":"<p>To use the plugin include <pre><code>&lt;!-- Font awesome is used by several plugins --&gt;\n&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/js/all.min.js\"&gt;&lt;/script&gt;\n&lt;link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\"&gt;\n&lt;!-- Custom controls plugin --&gt;\n&lt;script src=\"https://cdn.jsdelivr.net/npm/reveal.js-plugins@latest/customcontrols/plugin.js\"&gt;&lt;/script&gt;\n&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/reveal.js-plugins@latest/customcontrols/style.css\"&gt;\n</code></pre> to the header of your presentation and configure reveal.js and the plugin by</p> <pre><code>Reveal.initialize({\n  customcontrols: {\n    // add configuration here\n  },\n  // ...\n  plugins: [ RevealCustomControls ],\n  // ...\n});\n</code></pre>"},{"location":"slides/ILAMB_for_ExpAI/plugin/customcontrols/#configuration","title":"Configuration","text":"<p>The plugin can be configured by adding custom controls and changing the layout of the slide number, e.g., by:</p> <pre><code>Reveal.initialize({\n    // ...\n  customcontrols: {\n    controls: [\n      {\n        id: 'toggle-overview',\n        title: 'Toggle overview (O)',\n        icon: '&lt;i class=\"fa fa-th\"&gt;&lt;/i&gt;',\n        action: 'Reveal.toggleOverview();'\n      }\n    ]\n  },\n  // ...\n\n});\n</code></pre> <p>The <code>id</code> and <code>title</code> are optional. The configuration should be self explaining and any number of controls can be added. The style file can be altered to control the layout and responsiveness of the custom controls.</p>"},{"location":"slides/ILAMB_for_ExpAI/plugin/customcontrols/#license","title":"License","text":"<p>MIT licensed</p> <p>Copyright (C) 2023 Asvin Goel</p>"},{"location":"slides/ILAMB_for_ExpAI/plugin/menu/","title":"reveal.js-menu","text":"<p>A slideout menu plugin for Reveal.js to quickly jump to any slide by title. Also optionally change the theme and set the default transition. Check out the live demo</p>"},{"location":"slides/ILAMB_for_ExpAI/plugin/menu/#installation","title":"Installation","text":""},{"location":"slides/ILAMB_for_ExpAI/plugin/menu/#bower","title":"Bower","text":"<p>Download and install the package in your project:</p> <p><code>bower install reveal.js-menu</code></p> <p>Add the plugin to your presentation, as below.</p> <pre><code>&lt;script src=\"bower_components/reveal.js-menu/menu.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  Reveal.initialize({\n    plugins: [ RevealMenu ]\n  });\n&lt;/script&gt;\n</code></pre>"},{"location":"slides/ILAMB_for_ExpAI/plugin/menu/#npm","title":"npm","text":"<p>Download and install the package in your project:</p> <p><code>npm install --save reveal.js-menu</code></p> <p>Add the plugin to your presentation, as below.</p> <pre><code>&lt;script src=\"node_modules/reveal.js-menu/menu.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  Reveal.initialize({\n    plugins: [ RevealMenu ]\n  });\n&lt;/script&gt;\n</code></pre>"},{"location":"slides/ILAMB_for_ExpAI/plugin/menu/#manual","title":"Manual","text":"<p>Copy this repository into the plugins folder of your reveal.js presentation, ie <code>plugins/menu</code>.</p> <p>Add the plugin to the dependencies in your presentation, as below.</p> <pre><code>&lt;script src=\"plugin/menu/menu.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  Reveal.initialize({\n    plugins: [ RevealMenu ]\n  });\n&lt;/script&gt;\n</code></pre>"},{"location":"slides/ILAMB_for_ExpAI/plugin/menu/#configuration","title":"Configuration","text":"<p>You can configure the menu for your presentation by providing a <code>menu</code> option in the reveal.js initialization options. Note that all config values are optional and will default as specified below.</p> <pre><code>Reveal.initialize({\n  // ...\n\n  menu: {\n    // Specifies which side of the presentation the menu will\n    // be shown. Use 'left' or 'right'.\n    side: 'left',\n\n    // Specifies the width of the menu.\n    // Can be one of the following:\n    // 'normal', 'wide', 'third', 'half', 'full', or\n    // any valid css length value\n    width: 'normal',\n\n    // Add slide numbers to the titles in the slide list.\n    // Use 'true' or format string (same as reveal.js slide numbers)\n    numbers: false,\n\n    // Specifies which slide elements will be used for generating\n    // the slide titles in the menu. The default selects the first\n    // heading element found in the slide, but you can specify any\n    // valid css selector and the text from the first matching\n    // element will be used.\n    // Note: that a section data-menu-title attribute or an element\n    // with a menu-title class will take precedence over this option\n    titleSelector: 'h1, h2, h3, h4, h5, h6',\n\n    // If slides do not have a matching title, attempt to use the\n    // start of the text content as the title instead\n    useTextContentForMissingTitles: false,\n\n    // Hide slides from the menu that do not have a title.\n    // Set to 'true' to only list slides with titles.\n    hideMissingTitles: false,\n\n    // Adds markers to the slide titles to indicate the\n    // progress through the presentation. Set to 'false'\n    // to hide the markers.\n    markers: true,\n\n    // Specify custom panels to be included in the menu, by\n    // providing an array of objects with 'title', 'icon'\n    // properties, and either a 'src' or 'content' property.\n    custom: false,\n\n    // Specifies the themes that will be available in the themes\n    // menu panel. Set to 'true' to show the themes menu panel\n    // with the default themes list. Alternatively, provide an\n    // array to specify the themes to make available in the\n    // themes menu panel, for example...\n    //\n    // [\n    //     { name: 'Black', theme: 'dist/theme/black.css' },\n    //     { name: 'White', theme: 'dist/theme/white.css' },\n    //     { name: 'League', theme: 'dist/theme/league.css' },\n    //     {\n    //       name: 'Dark',\n    //       theme: 'lib/reveal.js/dist/theme/black.css',\n    //       highlightTheme: 'lib/reveal.js/plugin/highlight/monokai.css'\n    //     },\n    //     {\n    //       name: 'Code: Zenburn',\n    //       highlightTheme: 'lib/reveal.js/plugin/highlight/zenburn.css'\n    //     }\n    // ]\n    //\n    // Note: specifying highlightTheme without a theme will\n    // change the code highlight theme while leaving the\n    // presentation theme unchanged.\n    themes: false,\n\n    // Specifies the path to the default theme files. If your\n    // presentation uses a different path to the standard reveal\n    // layout then you need to provide this option, but only\n    // when 'themes' is set to 'true'. If you provide your own\n    // list of themes or 'themes' is set to 'false' the\n    // 'themesPath' option is ignored.\n    themesPath: 'dist/theme/',\n\n    // Specifies if the transitions menu panel will be shown.\n    // Set to 'true' to show the transitions menu panel with\n    // the default transitions list. Alternatively, provide an\n    // array to specify the transitions to make available in\n    // the transitions panel, for example...\n    // ['None', 'Fade', 'Slide']\n    transitions: false,\n\n    // Adds a menu button to the slides to open the menu panel.\n    // Set to 'false' to hide the button.\n    openButton: true,\n\n    // If 'true' allows the slide number in the presentation to\n    // open the menu panel. The reveal.js slideNumber option must\n    // be displayed for this to take effect\n    openSlideNumber: false,\n\n    // If true allows the user to open and navigate the menu using\n    // the keyboard. Standard keyboard interaction with reveal\n    // will be disabled while the menu is open.\n    keyboard: true,\n\n    // Normally the menu will close on user actions such as\n    // selecting a menu item, or clicking the presentation area.\n    // If 'true', the sticky option will leave the menu open\n    // until it is explicitly closed, that is, using the close\n    // button or pressing the ESC or m key (when the keyboard\n    // interaction option is enabled).\n    sticky: false,\n\n    // If 'true' standard menu items will be automatically opened\n    // when navigating using the keyboard. Note: this only takes\n    // effect when both the 'keyboard' and 'sticky' options are enabled.\n    autoOpen: true,\n\n    // If 'true' the menu will not be created until it is explicitly\n    // requested by calling RevealMenu.init(). Note this will delay\n    // the creation of all menu panels, including custom panels, and\n    // the menu button.\n    delayInit: false,\n\n    // If 'true' the menu will be shown when the menu is initialised.\n    openOnInit: false,\n\n    // By default the menu will load it's own font-awesome library\n    // icons. If your presentation needs to load a different\n    // font-awesome library the 'loadIcons' option can be set to false\n    // and the menu will not attempt to load the font-awesome library.\n    loadIcons: true\n  }\n});\n</code></pre>"},{"location":"slides/ILAMB_for_ExpAI/plugin/menu/#themes-stylesheet","title":"Themes Stylesheet","text":"<p>If you are using the themes panel you need to ensure the theme stylesheet in the presentation uses the <code>id=\"theme\"</code> attribute. For example...</p> <pre><code>&lt;link rel=\"stylesheet\" href=\"css/theme/black.css\" id=\"theme\" /&gt;\n</code></pre> <p>If your themes configuration includes code highlight themes you need to ensure the highlights theme stylesheet in the presentation uses the <code>id=\"highlight-theme\"</code> attribute. For example...</p> <pre><code>&lt;link\n  rel=\"stylesheet\"\n  href=\"plugin/highlight/zenburn.css\"\n  id=\"highlight-theme\"\n/&gt;\n</code></pre>"},{"location":"slides/ILAMB_for_ExpAI/plugin/menu/#slide-titles","title":"Slide Titles","text":"<p>The slide titles used in the menu can be supplied explicitly or are taken directly from the presentation, using the following rules...</p>"},{"location":"slides/ILAMB_for_ExpAI/plugin/menu/#1-the-sections-data-menu-title-attribute","title":"1. The section's <code>data-menu-title</code> attribute.","text":"<p>If the slide's section element contains a <code>data-menu-title</code> attribute this will be used for the slide title in the menu. For example...</p> <pre><code>&lt;section data-menu-title=\"Custom Menu Title\"&gt;\n  &lt;h1&gt;Title&lt;/h1&gt;\n  &lt;p&gt;...&lt;/p&gt;\n&lt;/section&gt;\n</code></pre>"},{"location":"slides/ILAMB_for_ExpAI/plugin/menu/#2-any-element-with-the-class-menu-title","title":"2. Any element with the class <code>menu-title</code>.","text":"<p>If the slide's section contains an element with the class <code>menu-title</code> then the element's text will be used for the title. The first such element found will be used if there are more than one. Note the element need not be displayed to be used. For example...</p> <pre><code>&lt;section&gt;\n  &lt;h1&gt;Title&lt;/h1&gt;\n  &lt;span class=\"menu-title\" style=\"display: none\"&gt;Custom Menu Title&lt;/span&gt;\n  &lt;p&gt;...&lt;/p&gt;\n&lt;/section&gt;\n</code></pre>"},{"location":"slides/ILAMB_for_ExpAI/plugin/menu/#3-the-first-heading-found-or-a-custom-element-selector","title":"3. The first heading found or a custom element selector","text":"<p>The <code>titleSelector</code> option can be used to customise the elements that will be used to generate the slide titles in the menu. The default option selects the first heading element found in the slide. For example...</p> <pre><code>&lt;section&gt;\n  &lt;h3&gt;This will be the slide title in the menu&lt;/h3&gt;\n  &lt;h1&gt;Title&lt;/h1&gt;\n  &lt;p&gt;...&lt;/p&gt;\n&lt;/section&gt;\n</code></pre> <p>Any valid CSS selector should work but note the selector will only be applied to elements contained within the slide section. You could use the <code>'h1'</code> selector to only use level 1 headings or <code>'p'</code> to use the first paragraph element. For example, <code>titleSelector: 'p.lead'</code> would be used like this...</p> <pre><code>&lt;section&gt;\n  &lt;h1&gt;Title&lt;/h1&gt;\n  &lt;p class=\"lead\"&gt;This will be the slide title in the menu&lt;/p&gt;\n  &lt;p&gt;...&lt;/p&gt;\n&lt;/section&gt;\n</code></pre> <p>Using <code>titleSelector: ''</code> will ignore all elements and no title will be provided, unless the slide section contains a <code>data-menu-title</code> attribute or an element with the <code>menu-title</code> class.</p>"},{"location":"slides/ILAMB_for_ExpAI/plugin/menu/#4-no-title-is-provided","title":"4. No title is provided","text":"<p>If no title can be found using the above methods, a default title incorporating the slide number will be used. For example, the following would result in a slide title in the format of 'Slide 12'...</p> <pre><code>&lt;section&gt;\n  &lt;p&gt;...&lt;/p&gt;\n&lt;/section&gt;\n</code></pre> <p>If the <code>hideMissingTitles</code> option is set to <code>true</code>, however, the slide will not be listed in the menu.</p>"},{"location":"slides/ILAMB_for_ExpAI/plugin/menu/#custom-menu-panels","title":"Custom Menu Panels","text":"<p>Additional custom panels can be added the menu using the <code>custom</code> option.</p> <pre><code>Reveal.initialize({\n  // ...\n\n  menu: {\n    // ...\n\n    custom: [\n      {\n        title: 'Links',\n        icon: '&lt;i class=\"fa fa-external-link\"&gt;',\n        src: 'links.html'\n      },\n      {\n        title: 'About',\n        icon: '&lt;i class=\"fa fa-info\"&gt;',\n        content: '&lt;p&gt;This slidedeck is created with reveal.js&lt;/p&gt;'\n      }\n    ]\n  }\n});\n</code></pre> <p><code>title</code> and <code>icon</code> are used for the toolbar buttons at the top of the menu. There are two approaches you can use to provide content for the panels...</p> <ul> <li>You can provide a URL in <code>src</code> to load html from another file.</li> <li>Alternatively, you can provide html in <code>content</code> and this will be added to the custom panel.</li> </ul>"},{"location":"slides/ILAMB_for_ExpAI/plugin/menu/#custom-slide-menu-items","title":"Custom slide menu items","text":"<p>You can provide menu items in your custom panels using the following format. This allows you to define your own navigation links for your presentation.</p> <pre><code>&lt;h1&gt;Links&lt;/h1&gt;\n&lt;ul class=\"slide-menu-items\"&gt;\n  &lt;li class=\"slide-menu-item\"&gt;&lt;a href=\"#/transitions\"&gt;Transitions&lt;/a&gt;&lt;/li&gt;\n  &lt;li class=\"slide-menu-item\"&gt;&lt;a href=\"#/13\"&gt;Code highlighting&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <p>You are not limited to linking to presentation slides. You can provide any link you wish.</p> <pre><code>&lt;h1&gt;External Links&lt;/h1&gt;\n&lt;ul class=\"slide-menu-items\"&gt;\n  &lt;li class=\"slide-menu-item\"&gt;\n    &lt;a href=\"https://github.com/denehyg/reveal.js-menu\"&gt;Reveal.js-menu&lt;/a&gt;\n  &lt;/li&gt;\n  &lt;li class=\"slide-menu-item\"&gt;\n    &lt;a href=\"https://github.com/hakimel/reveal.js\"&gt;Reveal.js&lt;/a&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <p>Using menu items enables keyboard navigation of your links as with the other panels. However, you don't have to use menu items for your links. You can simply provide standard links and unordered lists in your html. Notice you can provide your custom menu items mixed with other html if you wish.</p>"},{"location":"slides/ILAMB_for_ExpAI/plugin/menu/#ready-event","title":"Ready Event","text":"<p>A 'menu-ready' event is fired when reveal.js-menu has loaded all non-async dependencies and is ready to start navigating.</p> <pre><code>Reveal.addEventListener('menu-ready', function (event) {\n  // your code\n});\n</code></pre>"},{"location":"slides/ILAMB_for_ExpAI/plugin/menu/#api","title":"API","text":"<p>The <code>RevealMenu</code> object exposes a JavaScript API for controlling the menu:</p> Function Description toggle(event) Toggles the open state of the menu, ie open if it is closed, and close if it is open openMenu(event) Opens the menu closeMenu(event, force) Closes the menu. To force the menu to close (ie when <code>sticky</code> option is <code>true</code>) call <code>closeMenu(null, true)</code> openPanel(event, ref) Opens the menu to a specific panel, passing the name of the panel or the panel element itself isOpen() Returns true if the menu is open initialiseMenu() Initialises the menu if it has not already been initialised. Used in conjunction with the <code>delayInit</code> option isMenuInitialised() Returns true if the menu has been initialised"},{"location":"slides/ILAMB_for_ExpAI/plugin/menu/#compatibility","title":"Compatibility","text":"<p>reveal.js-menu v2.0 is built for reveal.js v4. It will not work with reveal.js v3. If you require a menu for reveal.js v3 you will need to install reveal.js-menu v1.2.0.</p> <p>v2.0 also introduces API changes that are not backwards compatible. <code>init()</code> has been renamed to <code>initMenu()</code> to deconflict with the reveal.js v4 plugin API. <code>isInit()</code> has also been changed to <code>isMenuInitialised()</code>.</p>"},{"location":"slides/ILAMB_for_ExpAI/plugin/menu/#license","title":"License","text":"<p>MIT licensed</p> <p>Copyright (C) 2020 Greg Denehy</p>"},{"location":"slides/ILAMB_for_ExpAI/plugin/menu/CONTRIBUTING/","title":"CONTRIBUTING","text":""},{"location":"slides/ILAMB_for_ExpAI/plugin/menu/CONTRIBUTING/#contributing","title":"Contributing","text":""},{"location":"slides/ILAMB_for_ExpAI/plugin/menu/CONTRIBUTING/#bug-reports","title":"Bug Reports","text":"<p>When reporting a bug make sure to include information about which browser and operating system you are on as well as the necessary steps to reproduce the issue. If possible please include a link to a sample presentation where the bug can be tested.</p>"},{"location":"slides/ILAMB_for_ExpAI/plugin/menu/CONTRIBUTING/#pull-requests","title":"Pull Requests","text":"<ul> <li>Should follow the coding style of the file you work in</li> <li>Should be made towards the dev branch</li> <li>Should be submitted from a feature/topic branch (not your master)</li> </ul>"},{"location":"slides/Minml/dist/css/theme/","title":"Index","text":""},{"location":"slides/Minml/dist/css/theme/#dependencies","title":"Dependencies","text":"<p>Themes are written using Sass to keep things modular and reduce the need for repeated selectors across files. Make sure that you have the reveal.js development environment installed before proceeding: https://revealjs.com/installation/#full-setup</p>"},{"location":"slides/Minml/dist/css/theme/#creating-a-theme","title":"Creating a Theme","text":"<p>To create your own theme, start by duplicating a <code>.scss</code> file in /css/theme/source. It will be automatically compiled from Sass to CSS (see the gulpfile) when you run <code>npm run build -- css-themes</code>.</p> <p>Each theme file does four things in the following order:</p> <ol> <li> <p>Include /css/theme/template/mixins.scss Shared utility functions.</p> </li> <li> <p>Include /css/theme/template/settings.scss Declares a set of custom variables that the template file (step 4) expects. Can be overridden in step 3.</p> </li> <li> <p>Override This is where you override the default theme. Either by specifying variables (see settings.scss for reference) or by adding any selectors and styles you please.</p> </li> <li> <p>Include /css/theme/template/theme.scss The template theme file which will generate final CSS output based on the currently defined variables.</p> </li> </ol>"},{"location":"slides/Minml/plugin/chalkboard/","title":"Chalkboard","text":"<p>With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:</p> <ul> <li>you can make notes directly on the slides, e.g. to comment on certain aspects,</li> <li>you can open a chalkboard or whiteboard on which you can make notes.</li> </ul> <p>The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.</p> <p>The plugin records all drawings made so that they can be play backed using the <code>autoSlide</code> feature or the <code>audio-slideshow</code> plugin.</p> <p>Check out the demo</p>"},{"location":"slides/Minml/plugin/chalkboard/#setup","title":"Setup","text":"<p>To use the plugin include <pre><code>&lt;!-- Font awesome is required for the chalkboard plugin --&gt;\n&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/js/all.min.js\"&gt;&lt;/script&gt;\n&lt;link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\"&gt;\n&lt;!-- Custom controls plugin is used to for opening and closing annotation modes. --&gt;\n&lt;script src=\"https://cdn.jsdelivr.net/npm/reveal.js-plugins@latest/customcontrols/plugin.js\"&gt;&lt;/script&gt;\n&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/reveal.js-plugins@latest/customcontrols/style.css\"&gt;\n&lt;!-- Chalkboard plugin --&gt;\n&lt;script src=\"https://cdn.jsdelivr.net/npm/reveal.js-plugins@latest/chalkboard/plugin.js\"&gt;&lt;/script&gt;\n&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/reveal.js-plugins@latest/chalkboard/style.css\"&gt;\n</code></pre> to the header of your presentation and configure reveal.js and the plugin by</p> <pre><code>Reveal.initialize({\n  customcontrols: {\n    controls: [\n      { icon: '&lt;i class=\"fa fa-pen-square\"&gt;&lt;/i&gt;',\n        title: 'Toggle chalkboard (B)',\n        action: 'RevealChalkboard.toggleChalkboard();'\n      },\n      { icon: '&lt;i class=\"fa fa-pen\"&gt;&lt;/i&gt;',\n        title: 'Toggle notes canvas (C)',\n        action: 'RevealChalkboard.toggleNotesCanvas();'\n      }\n    ]\n  },\n  chalkboard: {\n    // add configuration here\n  },\n  // ...\n  plugins: [ RevealChalkboard, RevealCustomControls ],\n  // ...\n});\n</code></pre> <p>In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that <code>font-awesome</code> is available. The easiest way is to include <pre><code>&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/reveal.js-plugins/menu/font-awesome/css/fontawesome.css\"&gt;\n</code></pre> to the <code>head</code> section of you HTML-file.</p>"},{"location":"slides/Minml/plugin/chalkboard/#usage","title":"Usage","text":""},{"location":"slides/Minml/plugin/chalkboard/#mouse-or-touch","title":"Mouse or touch","text":"<ul> <li>Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard</li> <li>Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)</li> <li>Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)</li> <li>Click the left mouse button and drag to write on notes canvas or chalkboard</li> <li>Click the right mouse button and drag to wipe away previous drawings</li> <li>Touch and move to write on notes canvas or chalkboard</li> </ul>"},{"location":"slides/Minml/plugin/chalkboard/#keyboard","title":"Keyboard","text":"<ul> <li>Press the 'BACKSPACE' key to delete all chalkboard drawings</li> <li>Press the 'DEL' key to clear the notes canvas or chalkboard</li> <li>Press the 'c' key to toggle the notes canvas</li> <li>Press the 'b' key to toggle the chalkboard</li> <li>Press the 'd' key to download drawings</li> <li>Press the 'x' key to cycle colors forward</li> <li>Press the 'y' key to cycle colors backward</li> </ul>"},{"location":"slides/Minml/plugin/chalkboard/#playback","title":"Playback","text":"<p>If the <code>autoSlide</code> feature is set or if the <code>audio-slideshow</code> plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.</p>"},{"location":"slides/Minml/plugin/chalkboard/#multiplexing","title":"Multiplexing","text":"<p>The plugin supports multiplexing via the <code>multiplex</code> plugin or the <code>seminar</code> plugin.</p>"},{"location":"slides/Minml/plugin/chalkboard/#pdf-export","title":"PDF-Export","text":"<p>If the slideshow is opened in print mode, the chalkboard drawings in the session storage (see <code>storage</code> option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see <code>src</code> option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.</p>"},{"location":"slides/Minml/plugin/chalkboard/#configuration","title":"Configuration","text":"<p>The plugin has several configuration options:</p> <ul> <li><code>boardmarkerWidth</code>: an integer, the drawing width of the boardmarker; larger values draw thicker lines.</li> <li><code>chalkWidth</code>: an integer, the drawing width of the chalk; larger values draw thicker lines.</li> <li><code>chalkEffect</code>: a float in the range <code>[0.0, 1.0]</code>, the intesity of the chalk effect on the chalk board. Full effect (default) <code>1.0</code>, no effect <code>0.0</code>.</li> <li><code>storage</code>: Optional variable name for session storage of drawings.</li> <li><code>src</code>: Optional filename for pre-recorded drawings.</li> <li><code>readOnly</code>: Configuation option allowing to prevent changes to existing drawings. If set to <code>true</code> no changes can be made, if set to false <code>false</code> changes can be made, if unset or set to <code>undefined</code> no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the 'DEL' key (i.e. by using the <code>RevealChalkboard.clear()</code> function).</li> <li><code>transition</code>: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.</li> <li><code>theme</code>: Can be set to either <code>\"chalkboard\"</code> or <code>\"whiteboard\"</code>.</li> </ul> <p>The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.</p> <ul> <li><code>background</code>: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.</li> <li><code>grid</code>: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. <code>{ color: 'rgb(127,127,255,0.1)', distance: 40, width: 2}</code>. Alternatively, the grid can be removed by setting the value to <code>false</code>.</li> <li><code>eraser</code>: An image path and radius for the eraser.</li> <li><code>boardmarkers</code>: A list of boardmarkers with given color and cursor.</li> <li><code>chalks</code>: A list of chalks with given color and cursor.</li> <li><code>rememberColor</code>: Whether to remember the last selected color for the slide canvas or the board.</li> </ul> <p>All of the configurations are optional and the default values shown below are used if the options are not provided.</p> <pre><code>Reveal.initialize({\n    // ...\n    chalkboard: {\n        boardmarkerWidth: 3,\n        chalkWidth: 7,\n        chalkEffect: 1.0,\n        storage: null,\n        src: null,\n        readOnly: undefined,\n        transition: 800,\n        theme: \"chalkboard\",\n        background: [ 'rgba(127,127,127,.1)' , path + 'img/blackboard.png' ],\n        grid: { color: 'rgb(50,50,10,0.5)', distance: 80, width: 2},\n        eraser: { src: path + 'img/sponge.png', radius: 20},\n        boardmarkers : [\n                { color: 'rgba(100,100,100,1)', cursor: 'url(' + path + 'img/boardmarker-black.png), auto'},\n                { color: 'rgba(30,144,255, 1)', cursor: 'url(' + path + 'img/boardmarker-blue.png), auto'},\n                { color: 'rgba(220,20,60,1)', cursor: 'url(' + path + 'img/boardmarker-red.png), auto'},\n                { color: 'rgba(50,205,50,1)', cursor: 'url(' + path + 'img/boardmarker-green.png), auto'},\n                { color: 'rgba(255,140,0,1)', cursor: 'url(' + path + 'img/boardmarker-orange.png), auto'},\n                { color: 'rgba(150,0,20150,1)', cursor: 'url(' + path + 'img/boardmarker-purple.png), auto'},\n                { color: 'rgba(255,220,0,1)', cursor: 'url(' + path + 'img/boardmarker-yellow.png), auto'}\n        ],\n        chalks: [\n                { color: 'rgba(255,255,255,0.5)', cursor: 'url(' + path + 'img/chalk-white.png), auto'},\n                { color: 'rgba(96, 154, 244, 0.5)', cursor: 'url(' + path + 'img/chalk-blue.png), auto'},\n                { color: 'rgba(237, 20, 28, 0.5)', cursor: 'url(' + path + 'img/chalk-red.png), auto'},\n                { color: 'rgba(20, 237, 28, 0.5)', cursor: 'url(' + path + 'img/chalk-green.png), auto'},\n                { color: 'rgba(220, 133, 41, 0.5)', cursor: 'url(' + path + 'img/chalk-orange.png), auto'},\n                { color: 'rgba(220,0,220,0.5)', cursor: 'url(' + path + 'img/chalk-purple.png), auto'},\n                { color: 'rgba(255,220,0,0.5)', cursor: 'url(' + path + 'img/chalk-yellow.png), auto'}\n        ]\n    },\n    // ...\n\n});\n</code></pre>"},{"location":"slides/Minml/plugin/chalkboard/#credits","title":"Credits","text":"<p>The chalkboard effect is based on Chalkboard by Mohamed Moustafa.</p>"},{"location":"slides/Minml/plugin/chalkboard/#license","title":"License","text":"<p>MIT licensed</p> <p>Copyright (C) 2023 Asvin Goel</p>"},{"location":"slides/Minml/plugin/chart/","title":"Chart","text":"<p>A plugin for Reveal.js allowing to easily add charts using Chart.js.</p> <p>Check out the demo</p>"},{"location":"slides/Minml/plugin/chart/#setup","title":"Setup","text":"<p>To use the plugin include <pre><code>&lt;!-- Chart plugin --&gt;\n&lt;script src=\"https://cdn.jsdelivr.net/npm/reveal.js-plugins@latest/chart/plugin.js\"&gt;&lt;/script&gt;\n&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.2.0/chart.min.js\"&gt;&lt;/script&gt;\n</code></pre> to the header of your presentation and configure reveal.js and the plugin by</p> <pre><code>Reveal.initialize({\n  chart: {\n    // add configuration here\n  },\n  // ...\n  plugins: [ RevealChart ],\n  // ...\n});\n</code></pre>"},{"location":"slides/Minml/plugin/chart/#configuration","title":"Configuration","text":"<p>The plugin has several parameters that you can set for your presentation by providing an <code>chart</code> option in the reveal.js initialization options. Note that all configuration parameters are optional and the defaults of Chart.js will be used for parameters that are not specified.</p> <p><pre><code>Reveal.initialize({\n    // ...\n    chart: {\n        defaults: {\n            color: 'lightgray', // color of labels\n            scale: {\n                beginAtZero: true,\n                ticks: { stepSize: 1 },\n                grid: { color: \"lightgray\" } , // color of grid lines\n            },\n        },\n        line: { borderColor: [ \"rgba(20,220,220,.8)\" , \"rgba(220,120,120,.8)\", \"rgba(20,120,220,.8)\" ], \"borderDash\": [ [5,10], [0,0] ] },\n        bar: { backgroundColor: [ \"rgba(20,220,220,.8)\" , \"rgba(220,120,120,.8)\", \"rgba(20,120,220,.8)\" ]},\n        pie: { backgroundColor: [ [\"rgba(0,0,0,.8)\" , \"rgba(220,20,20,.8)\", \"rgba(20,220,20,.8)\", \"rgba(220,220,20,.8)\", \"rgba(20,20,220,.8)\"] ]},\n    },\n        // ...\n});\n</code></pre> The <code>defaults</code> parameter  will overwrite <code>Chart.defaults</code>. Furthermore, for any chart type, e.g. line, bar, etc., the parameters for the individual datasets can be specified. Where Chart.js allows to specify a single parameter for a particular dataset, the plugin allows to specify an array of values for this parameter, which will automatically be assigned to the different datasets. Note that if there are more datasets than elements in the array, the plugin will start again with the first value in the array.</p>"},{"location":"slides/Minml/plugin/chart/#usage","title":"Usage","text":"<p>A chart can be included in a slide by adding a <code>canvas</code> element with the <code>data-chart</code> attribute set to the desired chart type.</p> <p>The chart can be configured within the canvas body by a JSON string embedded into an HTML comment.</p> <p><pre><code>&lt;canvas data-chart=\"line\" &gt;\n&lt;!--\n{\n \"data\": {\n  \"labels\": [\"January\",\" February\",\" March\",\" April\",\" May\",\" June\",\" July\"],\n  \"datasets\":[\n   {\n    \"data\":[65,59,80,81,56,55,40],\n    \"label\":\"My first dataset\",\"backgroundColor\":\"rgba(20,220,220,.8)\"\n   },\n   {\n    \"data\":[28,48,40,19,86,27,90],\n    \"label\":\"My second dataset\",\"backgroundColor\":\"rgba(220,120,120,.8)\"\n   }\n  ]\n }\n}\n--&gt;\n&lt;/canvas&gt;\n</code></pre> It is possible to provide the chart data by comma separated values and use the JSON string within the HTML comment to configure the chart layout.</p> <pre><code>&lt;canvas class=\"stretch\" data-chart=\"line\"&gt;\nMy first dataset, 65, 59, 80, 81, 56, 55, 40\n&lt;!-- This is a comment that will be ignored --&gt;\nMy second dataset, 28, 48, 40, 19, 86, 27, 90\n&lt;!--\n{\n \"data\" : {\n  \"labels\" : [\"Enero\", \"Febrero\", \"Marzo\", \"Avril\", \"Mayo\", \"Junio\", \"Julio\"],\n  \"datasets\" : [{ \"borderColor\": \"#0f0\", \"borderDash\": [\"5\",\"10\"] }, { \"borderColor\": \"#0ff\" } ]\n }\n}\n--&gt;\n&lt;/canvas&gt;\n</code></pre> <p>The layout configuration provided in <code>chart</code> parameter (see Configuration) will be used by default and only those parameters that are specified in a JSON string are used to overwrite the default values. If no JSON string is provided to configure the chart layout the default configuration is used. Note, that if no labels for the data points are provided by a JSON string, the plugin expects that the first row provides table headers.</p> <pre><code>&lt;canvas data-chart=\"line\"&gt;\nMonth, January, February, March, April, May, June, July\nMy first dataset, 65, 59, 80, 81, 56, 55, 40\nMy second dataset, 28, 48, 40, 19, 86, 27, 90\n&lt;/canvas&gt;\n</code></pre> <p>The chart data can also be provided in an external CSV file. To include external data, the filename must be specified using the <code>data-chart-src</code> attribute of the <code>canvas</code> element. The CSV file is expected to only contain data values, whereas options for drawing the chart can be given as described above.</p> <pre><code>&lt;canvas data-chart=\"bar\" data-chart-src=\"chart/data.csv\"&gt;\n&lt;!--\n{\n\"data\" : {\n\"datasets\" : [{ \"backgroundColor\": \"#0f0\" }, { \"backgroundColor\": \"#0ff\" } ]\n},\n\"options\": { \"scales\": { \"x\": { \"stacked\": true }, \"y\": { \"stacked\": true } } }\n}\n--&gt;\n&lt;/canvas&gt;\n</code></pre>"},{"location":"slides/Minml/plugin/chart/#license","title":"License","text":"<p>MIT licensed</p> <p>Copyright (C) 2023 Asvin Goel</p>"},{"location":"slides/Minml/plugin/customcontrols/","title":"Custom controls","text":"<p>This plugin allows to add responsive custom controls to reveal.js which allow arbitrary positioning, layout, and behaviour of the controls.</p> <p>Check out the demo</p>"},{"location":"slides/Minml/plugin/customcontrols/#setup","title":"Setup","text":"<p>To use the plugin include <pre><code>&lt;!-- Font awesome is used by several plugins --&gt;\n&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/js/all.min.js\"&gt;&lt;/script&gt;\n&lt;link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\"&gt;\n&lt;!-- Custom controls plugin --&gt;\n&lt;script src=\"https://cdn.jsdelivr.net/npm/reveal.js-plugins@latest/customcontrols/plugin.js\"&gt;&lt;/script&gt;\n&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/reveal.js-plugins@latest/customcontrols/style.css\"&gt;\n</code></pre> to the header of your presentation and configure reveal.js and the plugin by</p> <pre><code>Reveal.initialize({\n  customcontrols: {\n    // add configuration here\n  },\n  // ...\n  plugins: [ RevealCustomControls ],\n  // ...\n});\n</code></pre>"},{"location":"slides/Minml/plugin/customcontrols/#configuration","title":"Configuration","text":"<p>The plugin can be configured by adding custom controls and changing the layout of the slide number, e.g., by:</p> <pre><code>Reveal.initialize({\n    // ...\n  customcontrols: {\n    controls: [\n      {\n        id: 'toggle-overview',\n        title: 'Toggle overview (O)',\n        icon: '&lt;i class=\"fa fa-th\"&gt;&lt;/i&gt;',\n        action: 'Reveal.toggleOverview();'\n      }\n    ]\n  },\n  // ...\n\n});\n</code></pre> <p>The <code>id</code> and <code>title</code> are optional. The configuration should be self explaining and any number of controls can be added. The style file can be altered to control the layout and responsiveness of the custom controls.</p>"},{"location":"slides/Minml/plugin/customcontrols/#license","title":"License","text":"<p>MIT licensed</p> <p>Copyright (C) 2023 Asvin Goel</p>"},{"location":"slides/Minml/plugin/menu/","title":"reveal.js-menu","text":"<p>A slideout menu plugin for Reveal.js to quickly jump to any slide by title. Also optionally change the theme and set the default transition. Check out the live demo</p>"},{"location":"slides/Minml/plugin/menu/#installation","title":"Installation","text":""},{"location":"slides/Minml/plugin/menu/#bower","title":"Bower","text":"<p>Download and install the package in your project:</p> <p><code>bower install reveal.js-menu</code></p> <p>Add the plugin to your presentation, as below.</p> <pre><code>&lt;script src=\"bower_components/reveal.js-menu/menu.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  Reveal.initialize({\n    plugins: [ RevealMenu ]\n  });\n&lt;/script&gt;\n</code></pre>"},{"location":"slides/Minml/plugin/menu/#npm","title":"npm","text":"<p>Download and install the package in your project:</p> <p><code>npm install --save reveal.js-menu</code></p> <p>Add the plugin to your presentation, as below.</p> <pre><code>&lt;script src=\"node_modules/reveal.js-menu/menu.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  Reveal.initialize({\n    plugins: [ RevealMenu ]\n  });\n&lt;/script&gt;\n</code></pre>"},{"location":"slides/Minml/plugin/menu/#manual","title":"Manual","text":"<p>Copy this repository into the plugins folder of your reveal.js presentation, ie <code>plugins/menu</code>.</p> <p>Add the plugin to the dependencies in your presentation, as below.</p> <pre><code>&lt;script src=\"plugin/menu/menu.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  Reveal.initialize({\n    plugins: [ RevealMenu ]\n  });\n&lt;/script&gt;\n</code></pre>"},{"location":"slides/Minml/plugin/menu/#configuration","title":"Configuration","text":"<p>You can configure the menu for your presentation by providing a <code>menu</code> option in the reveal.js initialization options. Note that all config values are optional and will default as specified below.</p> <pre><code>Reveal.initialize({\n  // ...\n\n  menu: {\n    // Specifies which side of the presentation the menu will\n    // be shown. Use 'left' or 'right'.\n    side: 'left',\n\n    // Specifies the width of the menu.\n    // Can be one of the following:\n    // 'normal', 'wide', 'third', 'half', 'full', or\n    // any valid css length value\n    width: 'normal',\n\n    // Add slide numbers to the titles in the slide list.\n    // Use 'true' or format string (same as reveal.js slide numbers)\n    numbers: false,\n\n    // Specifies which slide elements will be used for generating\n    // the slide titles in the menu. The default selects the first\n    // heading element found in the slide, but you can specify any\n    // valid css selector and the text from the first matching\n    // element will be used.\n    // Note: that a section data-menu-title attribute or an element\n    // with a menu-title class will take precedence over this option\n    titleSelector: 'h1, h2, h3, h4, h5, h6',\n\n    // If slides do not have a matching title, attempt to use the\n    // start of the text content as the title instead\n    useTextContentForMissingTitles: false,\n\n    // Hide slides from the menu that do not have a title.\n    // Set to 'true' to only list slides with titles.\n    hideMissingTitles: false,\n\n    // Adds markers to the slide titles to indicate the\n    // progress through the presentation. Set to 'false'\n    // to hide the markers.\n    markers: true,\n\n    // Specify custom panels to be included in the menu, by\n    // providing an array of objects with 'title', 'icon'\n    // properties, and either a 'src' or 'content' property.\n    custom: false,\n\n    // Specifies the themes that will be available in the themes\n    // menu panel. Set to 'true' to show the themes menu panel\n    // with the default themes list. Alternatively, provide an\n    // array to specify the themes to make available in the\n    // themes menu panel, for example...\n    //\n    // [\n    //     { name: 'Black', theme: 'dist/theme/black.css' },\n    //     { name: 'White', theme: 'dist/theme/white.css' },\n    //     { name: 'League', theme: 'dist/theme/league.css' },\n    //     {\n    //       name: 'Dark',\n    //       theme: 'lib/reveal.js/dist/theme/black.css',\n    //       highlightTheme: 'lib/reveal.js/plugin/highlight/monokai.css'\n    //     },\n    //     {\n    //       name: 'Code: Zenburn',\n    //       highlightTheme: 'lib/reveal.js/plugin/highlight/zenburn.css'\n    //     }\n    // ]\n    //\n    // Note: specifying highlightTheme without a theme will\n    // change the code highlight theme while leaving the\n    // presentation theme unchanged.\n    themes: false,\n\n    // Specifies the path to the default theme files. If your\n    // presentation uses a different path to the standard reveal\n    // layout then you need to provide this option, but only\n    // when 'themes' is set to 'true'. If you provide your own\n    // list of themes or 'themes' is set to 'false' the\n    // 'themesPath' option is ignored.\n    themesPath: 'dist/theme/',\n\n    // Specifies if the transitions menu panel will be shown.\n    // Set to 'true' to show the transitions menu panel with\n    // the default transitions list. Alternatively, provide an\n    // array to specify the transitions to make available in\n    // the transitions panel, for example...\n    // ['None', 'Fade', 'Slide']\n    transitions: false,\n\n    // Adds a menu button to the slides to open the menu panel.\n    // Set to 'false' to hide the button.\n    openButton: true,\n\n    // If 'true' allows the slide number in the presentation to\n    // open the menu panel. The reveal.js slideNumber option must\n    // be displayed for this to take effect\n    openSlideNumber: false,\n\n    // If true allows the user to open and navigate the menu using\n    // the keyboard. Standard keyboard interaction with reveal\n    // will be disabled while the menu is open.\n    keyboard: true,\n\n    // Normally the menu will close on user actions such as\n    // selecting a menu item, or clicking the presentation area.\n    // If 'true', the sticky option will leave the menu open\n    // until it is explicitly closed, that is, using the close\n    // button or pressing the ESC or m key (when the keyboard\n    // interaction option is enabled).\n    sticky: false,\n\n    // If 'true' standard menu items will be automatically opened\n    // when navigating using the keyboard. Note: this only takes\n    // effect when both the 'keyboard' and 'sticky' options are enabled.\n    autoOpen: true,\n\n    // If 'true' the menu will not be created until it is explicitly\n    // requested by calling RevealMenu.init(). Note this will delay\n    // the creation of all menu panels, including custom panels, and\n    // the menu button.\n    delayInit: false,\n\n    // If 'true' the menu will be shown when the menu is initialised.\n    openOnInit: false,\n\n    // By default the menu will load it's own font-awesome library\n    // icons. If your presentation needs to load a different\n    // font-awesome library the 'loadIcons' option can be set to false\n    // and the menu will not attempt to load the font-awesome library.\n    loadIcons: true\n  }\n});\n</code></pre>"},{"location":"slides/Minml/plugin/menu/#themes-stylesheet","title":"Themes Stylesheet","text":"<p>If you are using the themes panel you need to ensure the theme stylesheet in the presentation uses the <code>id=\"theme\"</code> attribute. For example...</p> <pre><code>&lt;link rel=\"stylesheet\" href=\"css/theme/black.css\" id=\"theme\" /&gt;\n</code></pre> <p>If your themes configuration includes code highlight themes you need to ensure the highlights theme stylesheet in the presentation uses the <code>id=\"highlight-theme\"</code> attribute. For example...</p> <pre><code>&lt;link\n  rel=\"stylesheet\"\n  href=\"plugin/highlight/zenburn.css\"\n  id=\"highlight-theme\"\n/&gt;\n</code></pre>"},{"location":"slides/Minml/plugin/menu/#slide-titles","title":"Slide Titles","text":"<p>The slide titles used in the menu can be supplied explicitly or are taken directly from the presentation, using the following rules...</p>"},{"location":"slides/Minml/plugin/menu/#1-the-sections-data-menu-title-attribute","title":"1. The section's <code>data-menu-title</code> attribute.","text":"<p>If the slide's section element contains a <code>data-menu-title</code> attribute this will be used for the slide title in the menu. For example...</p> <pre><code>&lt;section data-menu-title=\"Custom Menu Title\"&gt;\n  &lt;h1&gt;Title&lt;/h1&gt;\n  &lt;p&gt;...&lt;/p&gt;\n&lt;/section&gt;\n</code></pre>"},{"location":"slides/Minml/plugin/menu/#2-any-element-with-the-class-menu-title","title":"2. Any element with the class <code>menu-title</code>.","text":"<p>If the slide's section contains an element with the class <code>menu-title</code> then the element's text will be used for the title. The first such element found will be used if there are more than one. Note the element need not be displayed to be used. For example...</p> <pre><code>&lt;section&gt;\n  &lt;h1&gt;Title&lt;/h1&gt;\n  &lt;span class=\"menu-title\" style=\"display: none\"&gt;Custom Menu Title&lt;/span&gt;\n  &lt;p&gt;...&lt;/p&gt;\n&lt;/section&gt;\n</code></pre>"},{"location":"slides/Minml/plugin/menu/#3-the-first-heading-found-or-a-custom-element-selector","title":"3. The first heading found or a custom element selector","text":"<p>The <code>titleSelector</code> option can be used to customise the elements that will be used to generate the slide titles in the menu. The default option selects the first heading element found in the slide. For example...</p> <pre><code>&lt;section&gt;\n  &lt;h3&gt;This will be the slide title in the menu&lt;/h3&gt;\n  &lt;h1&gt;Title&lt;/h1&gt;\n  &lt;p&gt;...&lt;/p&gt;\n&lt;/section&gt;\n</code></pre> <p>Any valid CSS selector should work but note the selector will only be applied to elements contained within the slide section. You could use the <code>'h1'</code> selector to only use level 1 headings or <code>'p'</code> to use the first paragraph element. For example, <code>titleSelector: 'p.lead'</code> would be used like this...</p> <pre><code>&lt;section&gt;\n  &lt;h1&gt;Title&lt;/h1&gt;\n  &lt;p class=\"lead\"&gt;This will be the slide title in the menu&lt;/p&gt;\n  &lt;p&gt;...&lt;/p&gt;\n&lt;/section&gt;\n</code></pre> <p>Using <code>titleSelector: ''</code> will ignore all elements and no title will be provided, unless the slide section contains a <code>data-menu-title</code> attribute or an element with the <code>menu-title</code> class.</p>"},{"location":"slides/Minml/plugin/menu/#4-no-title-is-provided","title":"4. No title is provided","text":"<p>If no title can be found using the above methods, a default title incorporating the slide number will be used. For example, the following would result in a slide title in the format of 'Slide 12'...</p> <pre><code>&lt;section&gt;\n  &lt;p&gt;...&lt;/p&gt;\n&lt;/section&gt;\n</code></pre> <p>If the <code>hideMissingTitles</code> option is set to <code>true</code>, however, the slide will not be listed in the menu.</p>"},{"location":"slides/Minml/plugin/menu/#custom-menu-panels","title":"Custom Menu Panels","text":"<p>Additional custom panels can be added the menu using the <code>custom</code> option.</p> <pre><code>Reveal.initialize({\n  // ...\n\n  menu: {\n    // ...\n\n    custom: [\n      {\n        title: 'Links',\n        icon: '&lt;i class=\"fa fa-external-link\"&gt;',\n        src: 'links.html'\n      },\n      {\n        title: 'About',\n        icon: '&lt;i class=\"fa fa-info\"&gt;',\n        content: '&lt;p&gt;This slidedeck is created with reveal.js&lt;/p&gt;'\n      }\n    ]\n  }\n});\n</code></pre> <p><code>title</code> and <code>icon</code> are used for the toolbar buttons at the top of the menu. There are two approaches you can use to provide content for the panels...</p> <ul> <li>You can provide a URL in <code>src</code> to load html from another file.</li> <li>Alternatively, you can provide html in <code>content</code> and this will be added to the custom panel.</li> </ul>"},{"location":"slides/Minml/plugin/menu/#custom-slide-menu-items","title":"Custom slide menu items","text":"<p>You can provide menu items in your custom panels using the following format. This allows you to define your own navigation links for your presentation.</p> <pre><code>&lt;h1&gt;Links&lt;/h1&gt;\n&lt;ul class=\"slide-menu-items\"&gt;\n  &lt;li class=\"slide-menu-item\"&gt;&lt;a href=\"#/transitions\"&gt;Transitions&lt;/a&gt;&lt;/li&gt;\n  &lt;li class=\"slide-menu-item\"&gt;&lt;a href=\"#/13\"&gt;Code highlighting&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <p>You are not limited to linking to presentation slides. You can provide any link you wish.</p> <pre><code>&lt;h1&gt;External Links&lt;/h1&gt;\n&lt;ul class=\"slide-menu-items\"&gt;\n  &lt;li class=\"slide-menu-item\"&gt;\n    &lt;a href=\"https://github.com/denehyg/reveal.js-menu\"&gt;Reveal.js-menu&lt;/a&gt;\n  &lt;/li&gt;\n  &lt;li class=\"slide-menu-item\"&gt;\n    &lt;a href=\"https://github.com/hakimel/reveal.js\"&gt;Reveal.js&lt;/a&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <p>Using menu items enables keyboard navigation of your links as with the other panels. However, you don't have to use menu items for your links. You can simply provide standard links and unordered lists in your html. Notice you can provide your custom menu items mixed with other html if you wish.</p>"},{"location":"slides/Minml/plugin/menu/#ready-event","title":"Ready Event","text":"<p>A 'menu-ready' event is fired when reveal.js-menu has loaded all non-async dependencies and is ready to start navigating.</p> <pre><code>Reveal.addEventListener('menu-ready', function (event) {\n  // your code\n});\n</code></pre>"},{"location":"slides/Minml/plugin/menu/#api","title":"API","text":"<p>The <code>RevealMenu</code> object exposes a JavaScript API for controlling the menu:</p> Function Description toggle(event) Toggles the open state of the menu, ie open if it is closed, and close if it is open openMenu(event) Opens the menu closeMenu(event, force) Closes the menu. To force the menu to close (ie when <code>sticky</code> option is <code>true</code>) call <code>closeMenu(null, true)</code> openPanel(event, ref) Opens the menu to a specific panel, passing the name of the panel or the panel element itself isOpen() Returns true if the menu is open initialiseMenu() Initialises the menu if it has not already been initialised. Used in conjunction with the <code>delayInit</code> option isMenuInitialised() Returns true if the menu has been initialised"},{"location":"slides/Minml/plugin/menu/#compatibility","title":"Compatibility","text":"<p>reveal.js-menu v2.0 is built for reveal.js v4. It will not work with reveal.js v3. If you require a menu for reveal.js v3 you will need to install reveal.js-menu v1.2.0.</p> <p>v2.0 also introduces API changes that are not backwards compatible. <code>init()</code> has been renamed to <code>initMenu()</code> to deconflict with the reveal.js v4 plugin API. <code>isInit()</code> has also been changed to <code>isMenuInitialised()</code>.</p>"},{"location":"slides/Minml/plugin/menu/#license","title":"License","text":"<p>MIT licensed</p> <p>Copyright (C) 2020 Greg Denehy</p>"},{"location":"slides/Minml/plugin/menu/CONTRIBUTING/","title":"CONTRIBUTING","text":""},{"location":"slides/Minml/plugin/menu/CONTRIBUTING/#contributing","title":"Contributing","text":""},{"location":"slides/Minml/plugin/menu/CONTRIBUTING/#bug-reports","title":"Bug Reports","text":"<p>When reporting a bug make sure to include information about which browser and operating system you are on as well as the necessary steps to reproduce the issue. If possible please include a link to a sample presentation where the bug can be tested.</p>"},{"location":"slides/Minml/plugin/menu/CONTRIBUTING/#pull-requests","title":"Pull Requests","text":"<ul> <li>Should follow the coding style of the file you work in</li> <li>Should be made towards the dev branch</li> <li>Should be submitted from a feature/topic branch (not your master)</li> </ul>"},{"location":"tools/","title":"Some tools","text":"Land Model Testbed Unified Dashboard The unified dashboard for illustrations of benchmarking results in a tabular and multidimensional style https://github.com/climatemodeling/unified-dashboard/ https://github.com/climatemodeling/unified-dashboard/ A Bash Workflow to Rewrite Model Outputs for Analysis A tool to convert the E3SM land model outputs following cmip conventions for analysis in ILAMB https://github.com/rubisco-sfa/elm2ilamb_wkflow https://github.com/rubisco-sfa/elm2ilamb_wkflow Land Model Testbed Lightweight CMOR python tool A cmorization python tool https://github.com/minxu74/lmt_lwcmor https://github.com/minxu74/lmt_lwcmor"},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/category/general/","title":"General","text":""}]}